<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation translatorOptions="" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:t name="description" value="This library provides cumulative medication duration calculation&#xa;logic for use with FHIR medication prescription, administration, and dispensing&#xa;resources. The logic here follows the guidance provided as part of the 5.6&#xa;version of Quality Data Model."/>
      <a:t name="comment" value="Note that the logic here assumes single-instruction dosing information.&#xa;Split-dosing, tapering, and other more complex dosing instructions are not handled."/>
      <a:t name="update" value="v0.2.000&#xa;Fixed Quantity handling in duration calculations&#xa;Fixed authorDatetime null handling&#xa;Changed to provide Date-level calculation, rather than DateTime&#xa;v2.0.000&#xa;Updated as part of 2022 AU refresh&#xa;Refactored to use QICoreCommon&#xa;v2.0.001&#xa;Fixed invalid unit error evaluating RolloutIntervals&#xa;Fixed RolloutIntervals incorrectly eliminating duplicates"/>
   </annotation>
   <identifier id="CumulativeMedicationDuration" version="3.0.000"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="QICore" uri="http://hl7.org/fhir"/>
   </usings>
   <includes>
      <def localIdentifier="FHIRHelpers" path="FHIRHelpers" version="4.1.000"/>
      <def localIdentifier="QICoreCommon" path="QICoreCommon" version="1.3.000"/>
   </includes>
   <parameters>
      <def name="ErrorLevel" accessLevel="Public">
         <default valueType="t:String" value="Warning" xsi:type="Literal"/>
         <parameterTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
      </def>
   </parameters>
   <codeSystems>
      <def name="V3TimingEvent" id="http://terminology.hl7.org/CodeSystem/v3-TimingEvent" accessLevel="Public"/>
      <def name="EventTiming" id="http://hl7.org/fhir/event-timing" accessLevel="Public"/>
   </codeSystems>
   <codes>
      <def name="HS" id="HS" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="WAKE" id="WAKE" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="C" id="C" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="CM" id="CM" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="CD" id="CD" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="CV" id="CV" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="AC" id="AC" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="ACM" id="ACM" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="ACD" id="ACD" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="ACV" id="ACV" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="PC" id="PC" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="PCM" id="PCM" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="PCD" id="PCD" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="PCV" id="PCV" accessLevel="Public">
         <codeSystem name="V3TimingEvent"/>
      </def>
      <def name="MORN" id="MORN" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="MORN.early" id="MORN.early" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="MORN.late" id="MORN.late" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="NOON" id="NOON" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="AFT" id="AFT" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="AFT.early" id="AFT.early" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="AFT.late" id="AFT.late" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="EVE" id="EVE" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="EVE.early" id="EVE.early" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="EVE.late" id="EVE.late" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="NIGHT" id="NIGHT" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="PHS" id="PHS" accessLevel="Public">
         <codeSystem name="EventTiming"/>
      </def>
      <def name="Every eight hours (qualifier value)" id="307469008" display="Every eight hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every eight to twelve hours (qualifier value)" id="396140003" display="Every eight to twelve hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every forty eight hours (qualifier value)" id="396131002" display="Every forty eight hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every forty hours (qualifier value)" id="396130001" display="Every forty hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every four hours (qualifier value)" id="225756002" display="Every four hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every seventy two hours (qualifier value)" id="396143001" display="Every seventy two hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every six hours (qualifier value)" id="307468000" display="Every six hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every six to eight hours (qualifier value)" id="396139000" display="Every six to eight hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every thirty six hours (qualifier value)" id="396126004" display="Every thirty six hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every three to four hours (qualifier value)" id="225754004" display="Every three to four hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every three to six hours (qualifier value)" id="396127008" display="Every three to six hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every twelve hours (qualifier value)" id="307470009" display="Every twelve hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every twenty four hours (qualifier value)" id="396125000" display="Every twenty four hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Every two to four hours (qualifier value)" id="225752000" display="Every two to four hours (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Four times daily (qualifier value)" id="307439001" display="Four times daily (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Once daily (qualifier value)" id="229797004" display="Once daily (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="One to four times a day (qualifier value)" id="396109005" display="One to four times a day (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="One to three times a day (qualifier value)" id="396108002" display="One to three times a day (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="One to two times a day (qualifier value)" id="396107007" display="One to two times a day (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Three times daily (qualifier value)" id="229798009" display="Three times daily (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Twice a day (qualifier value)" id="229799001" display="Twice a day (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def name="Two to four times a day (qualifier value)" id="396111001" display="Two to four times a day (qualifier value)" accessLevel="Public">
         <codeSystem name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
   </codes>
   <contexts>
      <def name="Patient"/>
   </contexts>
   <statements>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" templateId="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="ToDaily" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand path="unit" xsi:type="Property">
               <source name="period" xsi:type="OperandRef"/>
            </comparand>
            <caseItem>
               <when valueType="t:String" value="h" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="Divide">
                     <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand path="value" xsi:type="Property">
                        <source name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="min" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="s" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand xsi:type="Divide">
                           <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand path="value" xsi:type="Property">
                              <source name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="d" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="wk" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="mo" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="a" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="hour" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="Divide">
                     <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand path="value" xsi:type="Property">
                        <source name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="minute" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="second" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand xsi:type="Divide">
                           <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand path="value" xsi:type="Property">
                              <source name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="day" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="week" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="month" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="year" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="hours" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand xsi:type="Divide">
                     <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand path="value" xsi:type="Property">
                        <source name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="minutes" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="seconds" xsi:type="Literal"/>
               <then xsi:type="Multiply">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand xsi:type="Divide">
                           <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand path="value" xsi:type="Property">
                              <source name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="days" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="weeks" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="months" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:String" value="years" xsi:type="Literal"/>
               <then xsi:type="Divide">
                  <operand xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Divide">
                        <operand valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand path="value" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Multiply">
                        <operand valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <else asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Message">
                  <source xsi:type="Null"/>
                  <condition valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code valueType="t:String" value="CMDLogic.ToDaily.UnknownUnit" xsi:type="Literal"/>
                  <severity name="ErrorLevel" xsi:type="ParameterRef"/>
                  <message xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand valueType="t:String" value="Unknown unit " xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand path="unit" xsi:type="Property">
                           <source name="period" xsi:type="OperandRef"/>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="frequency">
            <operandTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="period">
            <operandTypeSpecifier name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="ToDaily" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="HS" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="WAKE" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="C" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="CM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="CD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="CV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="AC" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="ACM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="ACD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="ACV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="PC" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="PCM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="PCD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="PCV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="MORN" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="MORN.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="MORN.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="NOON" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="AFT" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="AFT.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="AFT.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="EVE" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="EVE.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="EVE.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="NIGHT" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="PHS" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Once daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Twice a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Three times daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Four times daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every twenty four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every twelve hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every thirty six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="0.67" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="6.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every seventy two hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="0.33" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every forty eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="0.5" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every eight to twelve hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every six to eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every three to four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every three to six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Every two to four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="12.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="One to four times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="One to three times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="One to two times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="frequency" xsi:type="OperandRef"/>
                  <operand name="Two to four times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <else asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Message">
                  <source xsi:type="Null"/>
                  <condition valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code valueType="t:String" value="CMDLogic.ToDaily.UnknownFrequencyCode" xsi:type="Literal"/>
                  <severity name="ErrorLevel" xsi:type="ParameterRef"/>
                  <message xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand valueType="t:String" value="Unknown frequency code " xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand path="code" xsi:type="Property">
                           <source name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="frequency">
            <operandTypeSpecifier name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="Quantity" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="If">
            <condition xsi:type="Not">
               <operand xsi:type="IsNull">
                  <operand name="value" xsi:type="OperandRef"/>
               </operand>
            </condition>
            <then classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value name="value" xsi:type="OperandRef"/>
               </element>
               <element name="unit">
                  <value name="unit" xsi:type="OperandRef"/>
               </element>
            </then>
            <else asType="t:Quantity" xsi:type="As">
               <operand xsi:type="Null"/>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="unit">
            <operandTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="MedicationRequestPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="R">
               <expression name="Request" xsi:type="OperandRef"/>
            </source>
            <let identifier="dosage">
               <expression xsi:type="SingletonFrom">
                  <operand path="dosageInstruction" scope="R" xsi:type="Property"/>
               </expression>
            </let>
            <let identifier="doseAndRate">
               <expression xsi:type="SingletonFrom">
                  <operand path="doseAndRate" xsi:type="Property">
                     <source name="dosage" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="timing">
               <expression path="timing" xsi:type="Property">
                  <source name="dosage" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <let identifier="frequency">
               <expression xsi:type="Coalesce">
                  <operand path="value" xsi:type="Property">
                     <source path="frequencyMax" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand path="value" xsi:type="Property">
                     <source path="frequency" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let identifier="period">
               <expression name="Quantity" xsi:type="FunctionRef">
                  <operand path="value" xsi:type="Property">
                     <source path="period" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand path="value" xsi:type="Property">
                     <source path="periodUnit" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let identifier="doseRange">
               <expression name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="dose" xsi:type="Property">
                     <source name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="doseQuantity">
               <expression name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="dose" xsi:type="Property">
                     <source name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="dose">
               <expression xsi:type="Coalesce">
                  <operand xsi:type="End">
                     <operand xsi:type="As">
                        <operand name="doseRange" xsi:type="QueryLetRef"/>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
                  <operand asType="t:Quantity" xsi:type="As">
                     <operand name="doseQuantity" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="dosesPerDay">
               <expression xsi:type="Coalesce">
                  <operand name="ToDaily" xsi:type="FunctionRef">
                     <operand name="frequency" xsi:type="QueryLetRef"/>
                     <operand name="period" xsi:type="QueryLetRef"/>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Count">
                        <source path="value" xsi:type="Property">
                           <source path="timeOfDay" xsi:type="Property">
                              <source path="repeat" xsi:type="Property">
                                 <source name="timing" xsi:type="QueryLetRef"/>
                              </source>
                           </source>
                        </source>
                     </operand>
                  </operand>
                  <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               </expression>
            </let>
            <let identifier="boundsPeriod">
               <expression strict="false" xsi:type="As">
                  <operand name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand path="bounds" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </operand>
                  </operand>
                  <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </asTypeSpecifier>
               </expression>
            </let>
            <let identifier="daysSupply">
               <expression path="value" xsi:type="Property">
                  <source xsi:type="ConvertQuantity">
                     <operand name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="expectedSupplyDuration" xsi:type="Property">
                           <source path="dispenseRequest" scope="R" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand valueType="t:String" value="d" xsi:type="Literal"/>
                  </source>
               </expression>
            </let>
            <let identifier="quantity">
               <expression name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="quantity" xsi:type="Property">
                     <source path="dispenseRequest" scope="R" xsi:type="Property"/>
                  </operand>
               </expression>
            </let>
            <let identifier="refills">
               <expression xsi:type="Coalesce">
                  <operand path="value" xsi:type="Property">
                     <source path="numberOfRepeatsAllowed" xsi:type="Property">
                        <source path="dispenseRequest" scope="R" xsi:type="Property"/>
                     </source>
                  </operand>
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </expression>
            </let>
            <let identifier="startDate">
               <expression xsi:type="Coalesce">
                  <operand xsi:type="DateFrom">
                     <operand xsi:type="Start">
                        <operand name="boundsPeriod" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
                  <operand xsi:type="DateFrom">
                     <operand path="value" xsi:type="Property">
                        <source path="authoredOn" scope="R" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand xsi:type="DateFrom">
                     <operand xsi:type="Start">
                        <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand path="validityPeriod" xsi:type="Property">
                              <source path="dispenseRequest" scope="R" xsi:type="Property"/>
                           </operand>
                        </operand>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let identifier="totalDaysSupplied">
               <expression xsi:type="Multiply">
                  <operand xsi:type="Coalesce">
                     <operand name="daysSupply" xsi:type="QueryLetRef"/>
                     <operand xsi:type="Divide">
                        <operand path="value" xsi:type="Property">
                           <source name="quantity" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand xsi:type="Multiply">
                           <operand path="value" xsi:type="Property">
                              <source name="dose" xsi:type="QueryLetRef"/>
                           </operand>
                           <operand name="dosesPerDay" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Add">
                        <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                        <operand name="refills" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return>
               <expression xsi:type="If">
                  <condition xsi:type="And">
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand path="high" xsi:type="Property">
                              <source name="boundsPeriod" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                     </operand>
                  </condition>
                  <then lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low xsi:type="ToDateTime">
                        <operand name="startDate" xsi:type="QueryLetRef"/>
                     </low>
                     <high xsi:type="End">
                        <operand name="boundsPeriod" xsi:type="QueryLetRef"/>
                     </high>
                  </then>
                  <else xsi:type="Interval">
                     <low xsi:type="ToDateTime">
                        <operand path="low" xsi:type="Property">
                           <source xsi:type="If">
                              <condition xsi:type="And">
                                 <operand xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand name="startDate" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                                 <operand xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                              </condition>
                              <then lowClosed="true" highClosed="true" xsi:type="Interval">
                                 <low name="startDate" xsi:type="QueryLetRef"/>
                                 <high xsi:type="Add">
                                    <operand name="startDate" xsi:type="QueryLetRef"/>
                                    <operand name="Quantity" xsi:type="FunctionRef">
                                       <operand xsi:type="Subtract">
                                          <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                          <operand xsi:type="ToDecimal">
                                             <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                                          </operand>
                                       </operand>
                                       <operand valueType="t:String" value="day" xsi:type="Literal"/>
                                    </operand>
                                 </high>
                              </then>
                              <else xsi:type="As">
                                 <operand xsi:type="Null"/>
                                 <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                    <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                 </asTypeSpecifier>
                              </else>
                           </source>
                        </operand>
                     </low>
                     <lowClosedExpression path="lowClosed" xsi:type="Property">
                        <source xsi:type="If">
                           <condition xsi:type="And">
                              <operand xsi:type="Not">
                                 <operand xsi:type="IsNull">
                                    <operand name="startDate" xsi:type="QueryLetRef"/>
                                 </operand>
                              </operand>
                              <operand xsi:type="Not">
                                 <operand xsi:type="IsNull">
                                    <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                 </operand>
                              </operand>
                           </condition>
                           <then lowClosed="true" highClosed="true" xsi:type="Interval">
                              <low name="startDate" xsi:type="QueryLetRef"/>
                              <high xsi:type="Add">
                                 <operand name="startDate" xsi:type="QueryLetRef"/>
                                 <operand name="Quantity" xsi:type="FunctionRef">
                                    <operand xsi:type="Subtract">
                                       <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                       <operand xsi:type="ToDecimal">
                                          <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                                       </operand>
                                    </operand>
                                    <operand valueType="t:String" value="day" xsi:type="Literal"/>
                                 </operand>
                              </high>
                           </then>
                           <else xsi:type="As">
                              <operand xsi:type="Null"/>
                              <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              </asTypeSpecifier>
                           </else>
                        </source>
                     </lowClosedExpression>
                     <high xsi:type="ToDateTime">
                        <operand path="high" xsi:type="Property">
                           <source xsi:type="If">
                              <condition xsi:type="And">
                                 <operand xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand name="startDate" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                                 <operand xsi:type="Not">
                                    <operand xsi:type="IsNull">
                                       <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                    </operand>
                                 </operand>
                              </condition>
                              <then lowClosed="true" highClosed="true" xsi:type="Interval">
                                 <low name="startDate" xsi:type="QueryLetRef"/>
                                 <high xsi:type="Add">
                                    <operand name="startDate" xsi:type="QueryLetRef"/>
                                    <operand name="Quantity" xsi:type="FunctionRef">
                                       <operand xsi:type="Subtract">
                                          <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                          <operand xsi:type="ToDecimal">
                                             <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                                          </operand>
                                       </operand>
                                       <operand valueType="t:String" value="day" xsi:type="Literal"/>
                                    </operand>
                                 </high>
                              </then>
                              <else xsi:type="As">
                                 <operand xsi:type="Null"/>
                                 <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                    <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                 </asTypeSpecifier>
                              </else>
                           </source>
                        </operand>
                     </high>
                     <highClosedExpression path="highClosed" xsi:type="Property">
                        <source xsi:type="If">
                           <condition xsi:type="And">
                              <operand xsi:type="Not">
                                 <operand xsi:type="IsNull">
                                    <operand name="startDate" xsi:type="QueryLetRef"/>
                                 </operand>
                              </operand>
                              <operand xsi:type="Not">
                                 <operand xsi:type="IsNull">
                                    <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                 </operand>
                              </operand>
                           </condition>
                           <then lowClosed="true" highClosed="true" xsi:type="Interval">
                              <low name="startDate" xsi:type="QueryLetRef"/>
                              <high xsi:type="Add">
                                 <operand name="startDate" xsi:type="QueryLetRef"/>
                                 <operand name="Quantity" xsi:type="FunctionRef">
                                    <operand xsi:type="Subtract">
                                       <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                                       <operand xsi:type="ToDecimal">
                                          <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                                       </operand>
                                    </operand>
                                    <operand valueType="t:String" value="day" xsi:type="Literal"/>
                                 </operand>
                              </high>
                           </then>
                           <else xsi:type="As">
                              <operand xsi:type="Null"/>
                              <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              </asTypeSpecifier>
                           </else>
                        </source>
                     </highClosedExpression>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Request">
            <operandTypeSpecifier name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="MedicationDispensePeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="D">
               <expression name="Dispense" xsi:type="OperandRef"/>
            </source>
            <let identifier="dosage">
               <expression xsi:type="SingletonFrom">
                  <operand path="dosageInstruction" scope="D" xsi:type="Property"/>
               </expression>
            </let>
            <let identifier="doseAndRate">
               <expression xsi:type="SingletonFrom">
                  <operand path="doseAndRate" xsi:type="Property">
                     <source name="dosage" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="timing">
               <expression path="timing" xsi:type="Property">
                  <source name="dosage" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <let identifier="frequency">
               <expression xsi:type="Coalesce">
                  <operand path="value" xsi:type="Property">
                     <source path="frequencyMax" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand path="value" xsi:type="Property">
                     <source path="frequency" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let identifier="period">
               <expression name="Quantity" xsi:type="FunctionRef">
                  <operand path="value" xsi:type="Property">
                     <source path="period" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand path="value" xsi:type="Property">
                     <source path="periodUnit" xsi:type="Property">
                        <source path="repeat" xsi:type="Property">
                           <source name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let identifier="doseRange">
               <expression name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="dose" xsi:type="Property">
                     <source name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="doseQuantity">
               <expression name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="dose" xsi:type="Property">
                     <source name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="dose">
               <expression xsi:type="Coalesce">
                  <operand xsi:type="End">
                     <operand xsi:type="As">
                        <operand name="doseRange" xsi:type="QueryLetRef"/>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
                  <operand asType="t:Quantity" xsi:type="As">
                     <operand name="doseQuantity" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let identifier="daysSupply">
               <expression path="value" xsi:type="Property">
                  <source xsi:type="ConvertQuantity">
                     <operand name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="daysSupply" scope="D" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="d" xsi:type="Literal"/>
                  </source>
               </expression>
            </let>
            <let identifier="dosesPerDay">
               <expression xsi:type="Coalesce">
                  <operand name="ToDaily" xsi:type="FunctionRef">
                     <operand name="frequency" xsi:type="QueryLetRef"/>
                     <operand name="period" xsi:type="QueryLetRef"/>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand xsi:type="Count">
                        <source path="value" xsi:type="Property">
                           <source path="timeOfDay" xsi:type="Property">
                              <source path="repeat" xsi:type="Property">
                                 <source name="timing" xsi:type="QueryLetRef"/>
                              </source>
                           </source>
                        </source>
                     </operand>
                  </operand>
                  <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               </expression>
            </let>
            <let identifier="startDate">
               <expression xsi:type="Coalesce">
                  <operand xsi:type="DateFrom">
                     <operand path="value" xsi:type="Property">
                        <source path="whenHandedOver" scope="D" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand xsi:type="DateFrom">
                     <operand path="value" xsi:type="Property">
                        <source path="whenPrepared" scope="D" xsi:type="Property"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let identifier="totalDaysSupplied">
               <expression xsi:type="Coalesce">
                  <operand name="daysSupply" xsi:type="QueryLetRef"/>
                  <operand xsi:type="Divide">
                     <operand path="value" xsi:type="Property">
                        <source name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand path="quantity" scope="D" xsi:type="Property"/>
                        </source>
                     </operand>
                     <operand xsi:type="Multiply">
                        <operand path="value" xsi:type="Property">
                           <source name="dose" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand name="dosesPerDay" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return>
               <expression xsi:type="If">
                  <condition xsi:type="And">
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low name="startDate" xsi:type="QueryLetRef"/>
                     <high xsi:type="Add">
                        <operand name="startDate" xsi:type="QueryLetRef"/>
                        <operand name="Quantity" xsi:type="FunctionRef">
                           <operand xsi:type="Subtract">
                              <operand name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                              <operand xsi:type="ToDecimal">
                                 <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand valueType="t:String" value="day" xsi:type="Literal"/>
                        </operand>
                     </high>
                  </then>
                  <else xsi:type="As">
                     <operand xsi:type="Null"/>
                     <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </asTypeSpecifier>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Dispense">
            <operandTypeSpecifier name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="TherapeuticDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression value="14" unit="days" xsi:type="Quantity"/>
         <operand name="medication">
            <operandTypeSpecifier name="t:Concept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="MedicationAdministrationPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="M">
               <expression name="Administration" xsi:type="OperandRef"/>
            </source>
            <let identifier="therapeuticDuration">
               <expression name="TherapeuticDuration" xsi:type="FunctionRef">
                  <operand asType="t:Concept" xsi:type="As">
                     <operand name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="medication" xsi:type="Property">
                           <source name="Administration" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let identifier="startDate">
               <expression xsi:type="DateFrom">
                  <operand xsi:type="Start">
                     <operand xsi:type="As">
                        <operand name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand path="effective" xsi:type="Property">
                              <source name="Administration" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return>
               <expression xsi:type="If">
                  <condition xsi:type="And">
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand xsi:type="Not">
                        <operand xsi:type="IsNull">
                           <operand name="therapeuticDuration" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low name="startDate" xsi:type="QueryLetRef"/>
                     <high xsi:type="Subtract">
                        <operand xsi:type="Add">
                           <operand name="startDate" xsi:type="QueryLetRef"/>
                           <operand name="therapeuticDuration" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand xsi:type="ToQuantity">
                           <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                        </operand>
                     </high>
                  </then>
                  <else xsi:type="As">
                     <operand xsi:type="Null"/>
                     <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </asTypeSpecifier>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Administration">
            <operandTypeSpecifier name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="CumulativeDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Sum">
            <source xsi:type="Query">
               <source alias="X">
                  <expression xsi:type="Collapse">
                     <operand name="Intervals" xsi:type="OperandRef"/>
                     <operand value="1.0" unit="day" xsi:type="Quantity"/>
                  </expression>
               </source>
               <return distinct="false">
                  <expression xsi:type="Add">
                     <operand precision="Day" xsi:type="DifferenceBetween">
                        <operand xsi:type="Start">
                           <operand name="X" xsi:type="AliasRef"/>
                        </operand>
                        <operand xsi:type="End">
                           <operand name="X" xsi:type="AliasRef"/>
                        </operand>
                     </operand>
                     <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </expression>
               </return>
            </source>
         </expression>
         <operand name="Intervals">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="RolloutIntervals" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="I">
               <expression name="intervals" xsi:type="OperandRef"/>
            </source>
            <aggregate identifier="R">
               <expression xsi:type="Union">
                  <operand name="R" xsi:type="QueryLetRef"/>
                  <operand xsi:type="List">
                     <element xsi:type="Query">
                        <source alias="X">
                           <expression name="I" xsi:type="AliasRef"/>
                        </source>
                        <let identifier="S">
                           <expression xsi:type="Max">
                              <source xsi:type="List">
                                 <element xsi:type="Add">
                                    <operand xsi:type="End">
                                       <operand xsi:type="Last">
                                          <source name="R" xsi:type="QueryLetRef"/>
                                       </operand>
                                    </operand>
                                    <operand value="1" unit="day" xsi:type="Quantity"/>
                                 </element>
                                 <element xsi:type="Start">
                                    <operand name="X" xsi:type="AliasRef"/>
                                 </element>
                              </source>
                           </expression>
                        </let>
                        <let identifier="E">
                           <expression xsi:type="Add">
                              <operand name="S" xsi:type="QueryLetRef"/>
                              <operand name="Quantity" xsi:type="FunctionRef">
                                 <operand xsi:type="ToDecimal">
                                    <operand xsi:type="Coalesce">
                                       <operand precision="Day" xsi:type="DurationBetween">
                                          <operand xsi:type="Start">
                                             <operand name="X" xsi:type="AliasRef"/>
                                          </operand>
                                          <operand xsi:type="End">
                                             <operand name="X" xsi:type="AliasRef"/>
                                          </operand>
                                       </operand>
                                       <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                                    </operand>
                                 </operand>
                                 <operand valueType="t:String" value="day" xsi:type="Literal"/>
                              </operand>
                           </expression>
                        </let>
                        <return>
                           <expression lowClosed="true" highClosed="true" xsi:type="Interval">
                              <low name="S" xsi:type="QueryLetRef"/>
                              <high name="E" xsi:type="QueryLetRef"/>
                           </expression>
                        </return>
                     </element>
                  </operand>
               </expression>
               <starting strict="false" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </asTypeSpecifier>
               </starting>
            </aggregate>
         </expression>
         <operand name="intervals">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="MedicationPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <caseItem>
               <when xsi:type="Is">
                  <operand name="medication" xsi:type="OperandRef"/>
                  <isTypeSpecifier name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
               </when>
               <then name="MedicationRequestPeriod" xsi:type="FunctionRef">
                  <operand asType="fhir:MedicationRequest" xsi:type="As">
                     <operand name="medication" xsi:type="OperandRef"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Is">
                  <operand name="medication" xsi:type="OperandRef"/>
                  <isTypeSpecifier name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
               </when>
               <then xsi:type="Interval">
                  <low xsi:type="ToDateTime">
                     <operand path="low" xsi:type="Property">
                        <source name="MedicationDispensePeriod" xsi:type="FunctionRef">
                           <operand asType="fhir:MedicationDispense" xsi:type="As">
                              <operand name="medication" xsi:type="OperandRef"/>
                           </operand>
                        </source>
                     </operand>
                  </low>
                  <lowClosedExpression path="lowClosed" xsi:type="Property">
                     <source name="MedicationDispensePeriod" xsi:type="FunctionRef">
                        <operand asType="fhir:MedicationDispense" xsi:type="As">
                           <operand name="medication" xsi:type="OperandRef"/>
                        </operand>
                     </source>
                  </lowClosedExpression>
                  <high xsi:type="ToDateTime">
                     <operand path="high" xsi:type="Property">
                        <source name="MedicationDispensePeriod" xsi:type="FunctionRef">
                           <operand asType="fhir:MedicationDispense" xsi:type="As">
                              <operand name="medication" xsi:type="OperandRef"/>
                           </operand>
                        </source>
                     </operand>
                  </high>
                  <highClosedExpression path="highClosed" xsi:type="Property">
                     <source name="MedicationDispensePeriod" xsi:type="FunctionRef">
                        <operand asType="fhir:MedicationDispense" xsi:type="As">
                           <operand name="medication" xsi:type="OperandRef"/>
                        </operand>
                     </source>
                  </highClosedExpression>
               </then>
            </caseItem>
            <caseItem>
               <when xsi:type="Is">
                  <operand name="medication" xsi:type="OperandRef"/>
                  <isTypeSpecifier name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
               </when>
               <then xsi:type="Interval">
                  <low xsi:type="ToDateTime">
                     <operand path="low" xsi:type="Property">
                        <source name="MedicationAdministrationPeriod" xsi:type="FunctionRef">
                           <operand asType="fhir:MedicationAdministration" xsi:type="As">
                              <operand name="medication" xsi:type="OperandRef"/>
                           </operand>
                        </source>
                     </operand>
                  </low>
                  <lowClosedExpression path="lowClosed" xsi:type="Property">
                     <source name="MedicationAdministrationPeriod" xsi:type="FunctionRef">
                        <operand asType="fhir:MedicationAdministration" xsi:type="As">
                           <operand name="medication" xsi:type="OperandRef"/>
                        </operand>
                     </source>
                  </lowClosedExpression>
                  <high xsi:type="ToDateTime">
                     <operand path="high" xsi:type="Property">
                        <source name="MedicationAdministrationPeriod" xsi:type="FunctionRef">
                           <operand asType="fhir:MedicationAdministration" xsi:type="As">
                              <operand name="medication" xsi:type="OperandRef"/>
                           </operand>
                        </source>
                     </operand>
                  </high>
                  <highClosedExpression path="highClosed" xsi:type="Property">
                     <source name="MedicationAdministrationPeriod" xsi:type="FunctionRef">
                        <operand asType="fhir:MedicationAdministration" xsi:type="As">
                           <operand name="medication" xsi:type="OperandRef"/>
                        </operand>
                     </source>
                  </highClosedExpression>
               </then>
            </caseItem>
            <else xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </else>
         </expression>
         <operand name="medication">
            <operandTypeSpecifier xsi:type="ChoiceTypeSpecifier">
               <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
               <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
               <choice name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="CumulativeMedicationDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression name="CumulativeDuration" xsi:type="FunctionRef">
            <operand xsi:type="Union">
               <operand xsi:type="Query">
                  <source alias="M">
                     <expression name="Medications" xsi:type="OperandRef"/>
                  </source>
                  <where xsi:type="Is">
                     <operand name="M" xsi:type="AliasRef"/>
                     <isTypeSpecifier name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                  </where>
                  <return>
                     <expression name="MedicationRequestPeriod" xsi:type="FunctionRef">
                        <operand asType="fhir:MedicationRequest" xsi:type="As">
                           <operand name="M" xsi:type="AliasRef"/>
                        </operand>
                     </expression>
                  </return>
               </operand>
               <operand name="RolloutIntervals" xsi:type="FunctionRef">
                  <operand xsi:type="Query">
                     <source alias="M">
                        <expression name="Medications" xsi:type="OperandRef"/>
                     </source>
                     <where xsi:type="Or">
                        <operand xsi:type="Is">
                           <operand name="M" xsi:type="AliasRef"/>
                           <isTypeSpecifier name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                        <operand xsi:type="Is">
                           <operand name="M" xsi:type="AliasRef"/>
                           <isTypeSpecifier name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </where>
                     <return>
                        <expression name="MedicationPeriod" xsi:type="FunctionRef">
                           <operand name="M" xsi:type="AliasRef"/>
                        </expression>
                     </return>
                  </operand>
               </operand>
            </operand>
         </expression>
         <operand name="Medications">
            <operandTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="ChoiceTypeSpecifier">
                  <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                  <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                  <choice name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
   </statements>
</library>