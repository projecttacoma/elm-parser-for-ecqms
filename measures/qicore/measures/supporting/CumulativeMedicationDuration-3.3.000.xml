<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation translatorOptions="EnableAnnotations,EnableLocators,EnableResultTypes" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:s r="972">
         <a:s>library CumulativeMedicationDuration version '3.3.000'</a:s>
      </a:s>
   </annotation>
   <identifier id="CumulativeMedicationDuration" version="3.3.000"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" locator="3:1-3:28" localIdentifier="QICore" uri="http://hl7.org/fhir">
         <annotation xsi:type="a:Annotation">
            <a:s r="1">
               <a:s>using </a:s>
               <a:s>
                  <a:s>QICore</a:s>
               </a:s>
               <a:s> version '4.1.1'</a:s>
            </a:s>
         </annotation>
      </def>
   </usings>
   <includes>
      <def localId="2" locator="5:1-5:37" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="4.3.000">
         <annotation xsi:type="a:Annotation">
            <a:s r="2">
               <a:s>include </a:s>
               <a:s>
                  <a:s>FHIRHelpers</a:s>
               </a:s>
               <a:s> version '4.3.000'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="3" locator="6:1-6:38" localIdentifier="QICoreCommon" path="QICoreCommon" version="1.5.000">
         <annotation xsi:type="a:Annotation">
            <a:s r="3">
               <a:s>include </a:s>
               <a:s>
                  <a:s>QICoreCommon</a:s>
               </a:s>
               <a:s> version '1.5.000'</a:s>
            </a:s>
         </annotation>
      </def>
   </includes>
   <parameters>
      <def localId="104" locator="63:1-63:45" resultTypeName="t:String" name="ErrorLevel" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="104">
               <a:s>parameter ErrorLevel </a:s>
               <a:s r="103">
                  <a:s>String</a:s>
               </a:s>
               <a:s> default </a:s>
               <a:s r="102">
                  <a:s>'Warning'</a:s>
               </a:s>
            </a:s>
         </annotation>
         <default localId="102" locator="63:37-63:45" resultTypeName="t:String" valueType="t:String" value="Warning" xsi:type="Literal"/>
         <parameterTypeSpecifier localId="103" locator="63:22-63:27" resultTypeName="t:String" name="t:String" xsi:type="NamedTypeSpecifier"/>
      </def>
   </parameters>
   <codeSystems>
      <def localId="4" locator="9:1-9:82" resultTypeName="t:CodeSystem" name="V3TimingEvent" id="http://terminology.hl7.org/CodeSystem/v3-TimingEvent" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="4">
               <a:s>// These code systems are not known to the MAT environment yet, request to have them added submitted
codesystem &quot;V3TimingEvent&quot;: 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent'</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="5" locator="10:1-10:60" resultTypeName="t:CodeSystem" name="EventTiming" id="http://hl7.org/fhir/event-timing" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="5">
               <a:s>codesystem &quot;EventTiming&quot;: 'http://hl7.org/fhir/event-timing'</a:s>
            </a:s>
         </annotation>
      </def>
   </codeSystems>
   <codes>
      <def localId="7" locator="12:1-12:36" resultTypeName="t:Code" name="HS" id="HS" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="7">
               <a:s>code &quot;HS&quot;: 'HS' from </a:s>
               <a:s r="6">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="6" locator="12:22-12:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="9" locator="13:1-13:40" resultTypeName="t:Code" name="WAKE" id="WAKE" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="9">
               <a:s>// event occurs [offset] before the hour of sleep (or trying to)
code &quot;WAKE&quot;: 'WAKE' from </a:s>
               <a:s r="8">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="8" locator="13:26-13:40" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="11" locator="14:1-14:34" resultTypeName="t:Code" name="C" id="C" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="11">
               <a:s>// event occurs [offset] after waking
code &quot;C&quot;: 'C' from </a:s>
               <a:s r="10">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="10" locator="14:20-14:34" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="13" locator="15:1-15:36" resultTypeName="t:Code" name="CM" id="CM" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="13">
               <a:s>//  event occurs at a meal (from the Latin cibus)
code &quot;CM&quot;: 'CM' from </a:s>
               <a:s r="12">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="12" locator="15:22-15:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="15" locator="16:1-16:36" resultTypeName="t:Code" name="CD" id="CD" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="15">
               <a:s>//  event occurs at breakfast (from the Latin cibus matutinus)
code &quot;CD&quot;: 'CD' from </a:s>
               <a:s r="14">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="14" locator="16:22-16:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="17" locator="17:1-17:36" resultTypeName="t:Code" name="CV" id="CV" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="17">
               <a:s>//  event occurs at lunch (from the Latin cibus diurnus)
code &quot;CV&quot;: 'CV' from </a:s>
               <a:s r="16">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="16" locator="17:22-17:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="19" locator="18:1-18:36" resultTypeName="t:Code" name="AC" id="AC" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="19">
               <a:s>//  event occurs at dinner (from the Latin ante cibus vespertinus)
code &quot;AC&quot;: 'AC' from </a:s>
               <a:s r="18">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="18" locator="18:22-18:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="21" locator="19:1-19:38" resultTypeName="t:Code" name="ACM" id="ACM" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="21">
               <a:s>//  event occurs [offset] before a meal (from the Latin ante cibus)
code &quot;ACM&quot;: 'ACM' from </a:s>
               <a:s r="20">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="20" locator="19:24-19:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="23" locator="20:1-20:38" resultTypeName="t:Code" name="ACD" id="ACD" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="23">
               <a:s>//  event occurs [offset] before breakfast (from the Latin ante cibus matutinus)
code &quot;ACD&quot;: 'ACD' from </a:s>
               <a:s r="22">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="22" locator="20:24-20:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="25" locator="21:1-21:38" resultTypeName="t:Code" name="ACV" id="ACV" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="25">
               <a:s>//  event occurs [offset] before lunch (from the Latin ante cibus diurnus)
code &quot;ACV&quot;: 'ACV' from </a:s>
               <a:s r="24">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="24" locator="21:24-21:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="27" locator="22:1-22:36" resultTypeName="t:Code" name="PC" id="PC" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="27">
               <a:s>//  event occurs [offset] before dinner (from the Latin ante cibus vespertinus)
code &quot;PC&quot;: 'PC' from </a:s>
               <a:s r="26">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="26" locator="22:22-22:36" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="29" locator="23:1-23:38" resultTypeName="t:Code" name="PCM" id="PCM" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="29">
               <a:s>//  event occurs [offset] after a meal (from the Latin post cibus)
code &quot;PCM&quot;: 'PCM' from </a:s>
               <a:s r="28">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="28" locator="23:24-23:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="31" locator="24:1-24:38" resultTypeName="t:Code" name="PCD" id="PCD" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="31">
               <a:s>//  event occurs [offset] after breakfast (from the Latin post cibus matutinus)
code &quot;PCD&quot;: 'PCD' from </a:s>
               <a:s r="30">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="30" locator="24:24-24:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="33" locator="25:1-25:38" resultTypeName="t:Code" name="PCV" id="PCV" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="33">
               <a:s>//  event occurs [offset] after lunch (from the Latin post cibus diurnus)
code &quot;PCV&quot;: 'PCV' from </a:s>
               <a:s r="32">
                  <a:s>&quot;V3TimingEvent&quot;</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="32" locator="25:24-25:38" resultTypeName="t:CodeSystem" name="V3TimingEvent"/>
      </def>
      <def localId="35" locator="27:1-27:36" resultTypeName="t:Code" name="MORN" id="MORN" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="35">
               <a:s>//  event occurs [offset] after dinner (from the Latin post cibus vespertinus)
code &quot;MORN&quot;: 'MORN' from </a:s>
               <a:s r="34">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="34" locator="27:26-27:36" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="37" locator="28:1-28:48" resultTypeName="t:Code" name="MORN.early" id="MORN.early" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="37">
               <a:s>//  Event occurs during the morning. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;MORN.early&quot;: 'MORN.early' from </a:s>
               <a:s r="36">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="36" locator="28:38-28:48" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="39" locator="29:1-29:46" resultTypeName="t:Code" name="MORN.late" id="MORN.late" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="39">
               <a:s>//  Early Morning  Event occurs during the early morning. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;MORN.late&quot;: 'MORN.late' from </a:s>
               <a:s r="38">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="38" locator="29:36-29:46" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="41" locator="30:1-30:36" resultTypeName="t:Code" name="NOON" id="NOON" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="41">
               <a:s>// Late Morning Event occurs during the late morning. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;NOON&quot;: 'NOON' from </a:s>
               <a:s r="40">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="40" locator="30:26-30:36" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="43" locator="31:1-31:34" resultTypeName="t:Code" name="AFT" id="AFT" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="43">
               <a:s>//  Noon  Event occurs around 12:00pm. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;AFT&quot;: 'AFT' from </a:s>
               <a:s r="42">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="42" locator="31:24-31:34" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="45" locator="32:1-32:46" resultTypeName="t:Code" name="AFT.early" id="AFT.early" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="45">
               <a:s>//  Afternoon   Event occurs during the afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;AFT.early&quot;: 'AFT.early' from </a:s>
               <a:s r="44">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="44" locator="32:36-32:46" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="47" locator="33:1-33:44" resultTypeName="t:Code" name="AFT.late" id="AFT.late" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="47">
               <a:s>//  Early Afternoon   Event occurs during the early afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;AFT.late&quot;: 'AFT.late' from </a:s>
               <a:s r="46">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="46" locator="33:34-33:44" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="49" locator="34:1-34:34" resultTypeName="t:Code" name="EVE" id="EVE" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="49">
               <a:s>//  Late Afternoon Event occurs during the late afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;EVE&quot;: 'EVE' from </a:s>
               <a:s r="48">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="48" locator="34:24-34:34" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="51" locator="35:1-35:46" resultTypeName="t:Code" name="EVE.early" id="EVE.early" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="51">
               <a:s>//  Evening  Event occurs during the evening. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;EVE.early&quot;: 'EVE.early' from </a:s>
               <a:s r="50">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="50" locator="35:36-35:46" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="53" locator="36:1-36:44" resultTypeName="t:Code" name="EVE.late" id="EVE.late" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="53">
               <a:s>//  Early Evening  Event occurs during the early evening. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;EVE.late&quot;: 'EVE.late' from </a:s>
               <a:s r="52">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="52" locator="36:34-36:44" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="55" locator="37:1-37:38" resultTypeName="t:Code" name="NIGHT" id="NIGHT" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="55">
               <a:s>//  Late Evening   Event occurs during the late evening. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;NIGHT&quot;: 'NIGHT' from </a:s>
               <a:s r="54">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="54" locator="37:28-37:38" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="57" locator="38:1-38:34" resultTypeName="t:Code" name="PHS" id="PHS" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="57">
               <a:s>//  Night Event occurs during the night. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;PHS&quot;: 'PHS' from </a:s>
               <a:s r="56">
                  <a:s>EventTiming</a:s>
               </a:s>
            </a:s>
         </annotation>
         <codeSystem localId="56" locator="38:24-38:34" resultTypeName="t:CodeSystem" name="EventTiming"/>
      </def>
      <def localId="59" locator="40:1-40:130" resultTypeName="t:Code" name="Every eight hours (qualifier value)" id="307469008" display="Every eight hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="59">
               <a:s>//  After Sleep Event occurs [offset] after subject goes to sleep. The exact time is unspecified and established by institution convention or patient interpretation.
code &quot;Every eight hours (qualifier value)&quot;: '307469008' from </a:s>
               <a:s r="58">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every eight hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="58" locator="40:62-40:84" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="61" locator="41:1-41:150" resultTypeName="t:Code" name="Every eight to twelve hours (qualifier value)" id="396140003" display="Every eight to twelve hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="61">
               <a:s>code &quot;Every eight to twelve hours (qualifier value)&quot;: '396140003' from </a:s>
               <a:s r="60">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every eight to twelve hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="60" locator="41:72-41:94" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="63" locator="42:1-42:142" resultTypeName="t:Code" name="Every forty eight hours (qualifier value)" id="396131002" display="Every forty eight hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="63">
               <a:s>code &quot;Every forty eight hours (qualifier value)&quot;: '396131002' from </a:s>
               <a:s r="62">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every forty eight hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="62" locator="42:68-42:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="65" locator="43:1-43:130" resultTypeName="t:Code" name="Every forty hours (qualifier value)" id="396130001" display="Every forty hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="65">
               <a:s>code &quot;Every forty hours (qualifier value)&quot;: '396130001' from </a:s>
               <a:s r="64">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every forty hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="64" locator="43:62-43:84" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="67" locator="44:1-44:128" resultTypeName="t:Code" name="Every four hours (qualifier value)" id="225756002" display="Every four hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="67">
               <a:s>code &quot;Every four hours (qualifier value)&quot;: '225756002' from </a:s>
               <a:s r="66">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every four hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="66" locator="44:61-44:83" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="69" locator="45:1-45:142" resultTypeName="t:Code" name="Every seventy two hours (qualifier value)" id="396143001" display="Every seventy two hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="69">
               <a:s>code &quot;Every seventy two hours (qualifier value)&quot;: '396143001' from </a:s>
               <a:s r="68">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every seventy two hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="68" locator="45:68-45:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="71" locator="46:1-46:126" resultTypeName="t:Code" name="Every six hours (qualifier value)" id="307468000" display="Every six hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="71">
               <a:s>code &quot;Every six hours (qualifier value)&quot;: '307468000' from </a:s>
               <a:s r="70">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every six hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="70" locator="46:60-46:82" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="73" locator="47:1-47:144" resultTypeName="t:Code" name="Every six to eight hours (qualifier value)" id="396139000" display="Every six to eight hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="73">
               <a:s>code &quot;Every six to eight hours (qualifier value)&quot;: '396139000' from </a:s>
               <a:s r="72">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every six to eight hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="72" locator="47:69-47:91" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="75" locator="48:1-48:140" resultTypeName="t:Code" name="Every thirty six hours (qualifier value)" id="396126004" display="Every thirty six hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="75">
               <a:s>code &quot;Every thirty six hours (qualifier value)&quot;: '396126004' from </a:s>
               <a:s r="74">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every thirty six hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="74" locator="48:67-48:89" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="77" locator="49:1-49:146" resultTypeName="t:Code" name="Every three to four hours (qualifier value)" id="225754004" display="Every three to four hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="77">
               <a:s>code &quot;Every three to four hours (qualifier value)&quot;: '225754004' from </a:s>
               <a:s r="76">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every three to four hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="76" locator="49:70-49:92" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="79" locator="50:1-50:144" resultTypeName="t:Code" name="Every three to six hours (qualifier value)" id="396127008" display="Every three to six hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="79">
               <a:s>code &quot;Every three to six hours (qualifier value)&quot;: '396127008' from </a:s>
               <a:s r="78">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every three to six hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="78" locator="50:69-50:91" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="81" locator="51:1-51:132" resultTypeName="t:Code" name="Every twelve hours (qualifier value)" id="307470009" display="Every twelve hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="81">
               <a:s>code &quot;Every twelve hours (qualifier value)&quot;: '307470009' from </a:s>
               <a:s r="80">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every twelve hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="80" locator="51:63-51:85" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="83" locator="52:1-52:142" resultTypeName="t:Code" name="Every twenty four hours (qualifier value)" id="396125000" display="Every twenty four hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="83">
               <a:s>code &quot;Every twenty four hours (qualifier value)&quot;: '396125000' from </a:s>
               <a:s r="82">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every twenty four hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="82" locator="52:68-52:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="85" locator="53:1-53:142" resultTypeName="t:Code" name="Every two to four hours (qualifier value)" id="225752000" display="Every two to four hours (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="85">
               <a:s>code &quot;Every two to four hours (qualifier value)&quot;: '225752000' from </a:s>
               <a:s r="84">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Every two to four hours (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="84" locator="53:68-53:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="87" locator="54:1-54:128" resultTypeName="t:Code" name="Four times daily (qualifier value)" id="307439001" display="Four times daily (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="87">
               <a:s>code &quot;Four times daily (qualifier value)&quot;: '307439001' from </a:s>
               <a:s r="86">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Four times daily (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="86" locator="54:61-54:83" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="89" locator="55:1-55:116" resultTypeName="t:Code" name="Once daily (qualifier value)" id="229797004" display="Once daily (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="89">
               <a:s>code &quot;Once daily (qualifier value)&quot;: '229797004' from </a:s>
               <a:s r="88">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Once daily (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="88" locator="55:55-55:77" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="91" locator="56:1-56:142" resultTypeName="t:Code" name="One to four times a day (qualifier value)" id="396109005" display="One to four times a day (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="91">
               <a:s>code &quot;One to four times a day (qualifier value)&quot;: '396109005' from </a:s>
               <a:s r="90">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'One to four times a day (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="90" locator="56:68-56:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="93" locator="57:1-57:144" resultTypeName="t:Code" name="One to three times a day (qualifier value)" id="396108002" display="One to three times a day (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="93">
               <a:s>code &quot;One to three times a day (qualifier value)&quot;: '396108002' from </a:s>
               <a:s r="92">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'One to three times a day (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="92" locator="57:69-57:91" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="95" locator="58:1-58:140" resultTypeName="t:Code" name="One to two times a day (qualifier value)" id="396107007" display="One to two times a day (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="95">
               <a:s>code &quot;One to two times a day (qualifier value)&quot;: '396107007' from </a:s>
               <a:s r="94">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'One to two times a day (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="94" locator="58:67-58:89" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="97" locator="59:1-59:130" resultTypeName="t:Code" name="Three times daily (qualifier value)" id="229798009" display="Three times daily (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="97">
               <a:s>code &quot;Three times daily (qualifier value)&quot;: '229798009' from </a:s>
               <a:s r="96">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Three times daily (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="96" locator="59:62-59:84" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="99" locator="60:1-60:118" resultTypeName="t:Code" name="Twice a day (qualifier value)" id="229799001" display="Twice a day (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="99">
               <a:s>code &quot;Twice a day (qualifier value)&quot;: '229799001' from </a:s>
               <a:s r="98">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Twice a day (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="98" locator="60:56-60:78" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
      <def localId="101" locator="61:1-61:142" resultTypeName="t:Code" name="Two to four times a day (qualifier value)" id="396111001" display="Two to four times a day (qualifier value)" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="101">
               <a:s>code &quot;Two to four times a day (qualifier value)&quot;: '396111001' from </a:s>
               <a:s r="100">
                  <a:s>QICoreCommon.&quot;SNOMEDCT&quot;</a:s>
               </a:s>
               <a:s> display 'Two to four times a day (qualifier value)'</a:s>
            </a:s>
         </annotation>
         <codeSystem localId="100" locator="61:68-61:90" resultTypeName="t:CodeSystem" name="SNOMEDCT" libraryName="QICoreCommon"/>
      </def>
   </codes>
   <contexts>
      <def locator="65:1-65:15" name="Patient"/>
   </contexts>
   <statements>
      <def locator="65:1-65:15" name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand locator="65:1-65:15" dataType="fhir:Patient" templateId="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="347" locator="85:1-109:5" resultTypeName="t:Decimal" name="ToDaily" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="347">
               <a:s>/*
 Goal is to get to number of days
 Two broad approaches to the calculation:
  1) Based on supply and frequency, calculate the number of expected days the medication will cover/has covered
  2) Based on relevant period, determine a covered interval and calculate the length of that interval in days
This topic covers several use cases and illustrates how to calculate Cumulative
Medication Duration for each type of medication resource using the supply and
frequency approach.
*/

/*
  For the first approach, we need to get from frequency to a frequency/day
  So we define ToDaily
*/

/*
  Calculates daily frequency given frequency within a period
*/
define function ToDaily(frequency </a:s>
               <a:s r="105">
                  <a:s>System.Integer</a:s>
               </a:s>
               <a:s>, period </a:s>
               <a:s r="106">
                  <a:s>System.Quantity</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="346">
                  <a:s r="346">
                     <a:s>case </a:s>
                     <a:s r="108">
                        <a:s r="107">
                           <a:s>period</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="108">
                           <a:s>unit</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="116">
                        <a:s>when </a:s>
                        <a:s r="109">
                           <a:s>'h'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="115">
                           <a:s r="110">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> * </a:s>
                           <a:s r="114">
                              <a:s>(</a:s>
                              <a:s r="114">
                                 <a:s r="111">24.0 / </a:s>
                                 <a:s r="113">
                                    <a:s r="112">
                                       <a:s>period</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="113">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="126">
                        <a:s>when </a:s>
                        <a:s r="117">
                           <a:s>'min'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="125">
                           <a:s r="123">
                              <a:s r="118">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="122">
                                 <a:s>(</a:s>
                                 <a:s r="122">
                                    <a:s r="119">24.0 / </a:s>
                                    <a:s r="121">
                                       <a:s r="120">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="121">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="124"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="138">
                        <a:s>when </a:s>
                        <a:s r="127">
                           <a:s>'s'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="137">
                           <a:s r="135">
                              <a:s r="133">
                                 <a:s r="128">
                                    <a:s>frequency</a:s>
                                 </a:s>
                                 <a:s> * </a:s>
                                 <a:s r="132">
                                    <a:s>(</a:s>
                                    <a:s r="132">
                                       <a:s r="129">24.0 / </a:s>
                                       <a:s r="131">
                                          <a:s r="130">
                                             <a:s>period</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="131">
                                             <a:s>value</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="134"> * 60</a:s>
                           </a:s>
                           <a:s r="136"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="148">
                        <a:s>when </a:s>
                        <a:s r="139">
                           <a:s>'d'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="147">
                           <a:s r="145">
                              <a:s r="140">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="144">
                                 <a:s>(</a:s>
                                 <a:s r="144">
                                    <a:s r="141">24.0 / </a:s>
                                    <a:s r="143">
                                       <a:s r="142">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="143">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="146"> / 24</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="160">
                        <a:s>when </a:s>
                        <a:s r="149">
                           <a:s>'wk'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="159">
                           <a:s r="155">
                              <a:s r="150">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="154">
                                 <a:s>(</a:s>
                                 <a:s r="154">
                                    <a:s r="151">24.0 / </a:s>
                                    <a:s r="153">
                                       <a:s r="152">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="153">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="158">
                              <a:s>(</a:s>
                              <a:s r="158">
                                 <a:s r="156">24 * 7</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="172">
                        <a:s>when </a:s>
                        <a:s r="161">
                           <a:s>'mo'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="171">
                           <a:s r="167">
                              <a:s r="162">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="166">
                                 <a:s>(</a:s>
                                 <a:s r="166">
                                    <a:s r="163">24.0 / </a:s>
                                    <a:s r="165">
                                       <a:s r="164">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="165">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="170">
                              <a:s>(</a:s>
                              <a:s r="170">
                                 <a:s r="168">24 * 30</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 30 days in month */
    </a:s>
                     <a:s r="184">
                        <a:s>when </a:s>
                        <a:s r="173">
                           <a:s>'a'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="183">
                           <a:s r="179">
                              <a:s r="174">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="178">
                                 <a:s>(</a:s>
                                 <a:s r="178">
                                    <a:s r="175">24.0 / </a:s>
                                    <a:s r="177">
                                       <a:s r="176">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="177">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="182">
                              <a:s>(</a:s>
                              <a:s r="182">
                                 <a:s r="180">24 * 365</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 365 days in year */
    </a:s>
                     <a:s r="192">
                        <a:s>when </a:s>
                        <a:s r="185">
                           <a:s>'hour'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="191">
                           <a:s r="186">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> * </a:s>
                           <a:s r="190">
                              <a:s>(</a:s>
                              <a:s r="190">
                                 <a:s r="187">24.0 / </a:s>
                                 <a:s r="189">
                                    <a:s r="188">
                                       <a:s>period</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="189">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="202">
                        <a:s>when </a:s>
                        <a:s r="193">
                           <a:s>'minute'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="201">
                           <a:s r="199">
                              <a:s r="194">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="198">
                                 <a:s>(</a:s>
                                 <a:s r="198">
                                    <a:s r="195">24.0 / </a:s>
                                    <a:s r="197">
                                       <a:s r="196">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="197">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="200"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="214">
                        <a:s>when </a:s>
                        <a:s r="203">
                           <a:s>'second'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="213">
                           <a:s r="211">
                              <a:s r="209">
                                 <a:s r="204">
                                    <a:s>frequency</a:s>
                                 </a:s>
                                 <a:s> * </a:s>
                                 <a:s r="208">
                                    <a:s>(</a:s>
                                    <a:s r="208">
                                       <a:s r="205">24.0 / </a:s>
                                       <a:s r="207">
                                          <a:s r="206">
                                             <a:s>period</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="207">
                                             <a:s>value</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="210"> * 60</a:s>
                           </a:s>
                           <a:s r="212"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="224">
                        <a:s>when </a:s>
                        <a:s r="215">
                           <a:s>'day'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="223">
                           <a:s r="221">
                              <a:s r="216">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="220">
                                 <a:s>(</a:s>
                                 <a:s r="220">
                                    <a:s r="217">24.0 / </a:s>
                                    <a:s r="219">
                                       <a:s r="218">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="219">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="222"> / 24</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="236">
                        <a:s>when </a:s>
                        <a:s r="225">
                           <a:s>'week'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="235">
                           <a:s r="231">
                              <a:s r="226">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="230">
                                 <a:s>(</a:s>
                                 <a:s r="230">
                                    <a:s r="227">24.0 / </a:s>
                                    <a:s r="229">
                                       <a:s r="228">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="229">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="234">
                              <a:s>(</a:s>
                              <a:s r="234">
                                 <a:s r="232">24 * 7</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="248">
                        <a:s>when </a:s>
                        <a:s r="237">
                           <a:s>'month'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="247">
                           <a:s r="243">
                              <a:s r="238">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="242">
                                 <a:s>(</a:s>
                                 <a:s r="242">
                                    <a:s r="239">24.0 / </a:s>
                                    <a:s r="241">
                                       <a:s r="240">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="241">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="246">
                              <a:s>(</a:s>
                              <a:s r="246">
                                 <a:s r="244">24 * 30</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 30 days in month */
    </a:s>
                     <a:s r="260">
                        <a:s>when </a:s>
                        <a:s r="249">
                           <a:s>'year'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="259">
                           <a:s r="255">
                              <a:s r="250">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="254">
                                 <a:s>(</a:s>
                                 <a:s r="254">
                                    <a:s r="251">24.0 / </a:s>
                                    <a:s r="253">
                                       <a:s r="252">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="253">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="258">
                              <a:s>(</a:s>
                              <a:s r="258">
                                 <a:s r="256">24 * 365</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 365 days in year */
    </a:s>
                     <a:s r="268">
                        <a:s>when </a:s>
                        <a:s r="261">
                           <a:s>'hours'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="267">
                           <a:s r="262">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> * </a:s>
                           <a:s r="266">
                              <a:s>(</a:s>
                              <a:s r="266">
                                 <a:s r="263">24.0 / </a:s>
                                 <a:s r="265">
                                    <a:s r="264">
                                       <a:s>period</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="265">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="278">
                        <a:s>when </a:s>
                        <a:s r="269">
                           <a:s>'minutes'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="277">
                           <a:s r="275">
                              <a:s r="270">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="274">
                                 <a:s>(</a:s>
                                 <a:s r="274">
                                    <a:s r="271">24.0 / </a:s>
                                    <a:s r="273">
                                       <a:s r="272">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="273">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="276"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="290">
                        <a:s>when </a:s>
                        <a:s r="279">
                           <a:s>'seconds'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="289">
                           <a:s r="287">
                              <a:s r="285">
                                 <a:s r="280">
                                    <a:s>frequency</a:s>
                                 </a:s>
                                 <a:s> * </a:s>
                                 <a:s r="284">
                                    <a:s>(</a:s>
                                    <a:s r="284">
                                       <a:s r="281">24.0 / </a:s>
                                       <a:s r="283">
                                          <a:s r="282">
                                             <a:s>period</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="283">
                                             <a:s>value</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="286"> * 60</a:s>
                           </a:s>
                           <a:s r="288"> * 60</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="300">
                        <a:s>when </a:s>
                        <a:s r="291">
                           <a:s>'days'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="299">
                           <a:s r="297">
                              <a:s r="292">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="296">
                                 <a:s>(</a:s>
                                 <a:s r="296">
                                    <a:s r="293">24.0 / </a:s>
                                    <a:s r="295">
                                       <a:s r="294">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="295">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="298"> / 24</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="312">
                        <a:s>when </a:s>
                        <a:s r="301">
                           <a:s>'weeks'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="311">
                           <a:s r="307">
                              <a:s r="302">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="306">
                                 <a:s>(</a:s>
                                 <a:s r="306">
                                    <a:s r="303">24.0 / </a:s>
                                    <a:s r="305">
                                       <a:s r="304">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="305">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="310">
                              <a:s>(</a:s>
                              <a:s r="310">
                                 <a:s r="308">24 * 7</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="324">
                        <a:s>when </a:s>
                        <a:s r="313">
                           <a:s>'months'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="323">
                           <a:s r="319">
                              <a:s r="314">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="318">
                                 <a:s>(</a:s>
                                 <a:s r="318">
                                    <a:s r="315">24.0 / </a:s>
                                    <a:s r="317">
                                       <a:s r="316">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="317">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="322">
                              <a:s>(</a:s>
                              <a:s r="322">
                                 <a:s r="320">24 * 30</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 30 days in month */
    </a:s>
                     <a:s r="336">
                        <a:s>when </a:s>
                        <a:s r="325">
                           <a:s>'years'</a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="335">
                           <a:s r="331">
                              <a:s r="326">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="330">
                                 <a:s>(</a:s>
                                 <a:s r="330">
                                    <a:s r="327">24.0 / </a:s>
                                    <a:s r="329">
                                       <a:s r="328">
                                          <a:s>period</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="329">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                           <a:s> / </a:s>
                           <a:s r="334">
                              <a:s>(</a:s>
                              <a:s r="334">
                                 <a:s r="332">24 * 365</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s> /* assuming 365 days in year */
    else </a:s>
                     <a:s r="345">
                        <a:s r="337">Message(null, true, </a:s>
                        <a:s r="339">
                           <a:s>'CMDLogic.ToDaily.UnknownUnit'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="340">
                           <a:s>ErrorLevel</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="344">
                           <a:s r="341">
                              <a:s>'Unknown unit '</a:s>
                           </a:s>
                           <a:s> &amp; </a:s>
                           <a:s r="343">
                              <a:s r="342">
                                 <a:s>period</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="343">
                                 <a:s>unit</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
  end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="346" locator="86:3-109:5" resultTypeName="t:Decimal" xsi:type="Case">
            <comparand localId="108" locator="86:8-86:18" resultTypeName="t:String" path="unit" xsi:type="Property">
               <source localId="107" locator="86:8-86:13" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
            </comparand>
            <caseItem localId="116" locator="87:5-87:51">
               <when localId="109" locator="87:10-87:12" resultTypeName="t:String" valueType="t:String" value="h" xsi:type="Literal"/>
               <then localId="115" locator="87:19-87:51" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand localId="110" locator="87:19-87:27" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand localId="114" locator="87:31-87:51" resultTypeName="t:Decimal" xsi:type="Divide">
                     <operand localId="111" locator="87:32-87:35" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand localId="113" locator="87:39-87:50" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                        <source localId="112" locator="87:39-87:44" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="126" locator="88:5-88:58">
               <when localId="117" locator="88:10-88:14" resultTypeName="t:String" valueType="t:String" value="min" xsi:type="Literal"/>
               <then localId="125" locator="88:21-88:58" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="123" locator="88:21-88:53" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="118" locator="88:21-88:29" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="122" locator="88:33-88:53" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="119" locator="88:34-88:37" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="121" locator="88:41-88:52" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="120" locator="88:41-88:46" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="124" locator="88:57-88:58" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="138" locator="89:5-89:61">
               <when localId="127" locator="89:10-89:12" resultTypeName="t:String" valueType="t:String" value="s" xsi:type="Literal"/>
               <then localId="137" locator="89:19-89:61" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="135" locator="89:19-89:56" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand localId="133" locator="89:19-89:51" resultTypeName="t:Decimal" xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand localId="128" locator="89:19-89:27" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand localId="132" locator="89:31-89:51" resultTypeName="t:Decimal" xsi:type="Divide">
                           <operand localId="129" locator="89:32-89:35" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand localId="131" locator="89:39-89:50" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                              <source localId="130" locator="89:39-89:44" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand localId="134" locator="89:55-89:56" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="136" locator="89:60-89:61" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="148" locator="90:5-90:56">
               <when localId="139" locator="90:10-90:12" resultTypeName="t:String" valueType="t:String" value="d" xsi:type="Literal"/>
               <then localId="147" locator="90:19-90:56" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="145" locator="90:19-90:51" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="140" locator="90:19-90:27" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="144" locator="90:31-90:51" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="141" locator="90:32-90:35" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="143" locator="90:39-90:50" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="142" locator="90:39-90:44" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="146" locator="90:55-90:56" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="160" locator="91:5-91:63">
               <when localId="149" locator="91:10-91:13" resultTypeName="t:String" valueType="t:String" value="wk" xsi:type="Literal"/>
               <then localId="159" locator="91:20-91:63" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="155" locator="91:20-91:52" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="150" locator="91:20-91:28" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="154" locator="91:32-91:52" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="151" locator="91:33-91:36" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="153" locator="91:40-91:51" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="152" locator="91:40-91:45" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="158" locator="91:56-91:63" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="156" locator="91:57-91:58" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="157" locator="91:62" resultTypeName="t:Integer" valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="172" locator="92:5-92:64">
               <when localId="161" locator="92:10-92:13" resultTypeName="t:String" valueType="t:String" value="mo" xsi:type="Literal"/>
               <then localId="171" locator="92:20-92:64" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="167" locator="92:20-92:52" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="162" locator="92:20-92:28" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="166" locator="92:32-92:52" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="163" locator="92:33-92:36" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="165" locator="92:40-92:51" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="164" locator="92:40-92:45" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="170" locator="92:56-92:64" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="168" locator="92:57-92:58" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="169" locator="92:62-92:63" resultTypeName="t:Integer" valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="184" locator="93:5-93:64">
               <when localId="173" locator="93:10-93:12" resultTypeName="t:String" valueType="t:String" value="a" xsi:type="Literal"/>
               <then localId="183" locator="93:19-93:64" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="179" locator="93:19-93:51" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="174" locator="93:19-93:27" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="178" locator="93:31-93:51" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="175" locator="93:32-93:35" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="177" locator="93:39-93:50" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="176" locator="93:39-93:44" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="182" locator="93:55-93:64" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="180" locator="93:56-93:57" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="181" locator="93:61-93:63" resultTypeName="t:Integer" valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="192" locator="94:5-94:54">
               <when localId="185" locator="94:10-94:15" resultTypeName="t:String" valueType="t:String" value="hour" xsi:type="Literal"/>
               <then localId="191" locator="94:22-94:54" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand localId="186" locator="94:22-94:30" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand localId="190" locator="94:34-94:54" resultTypeName="t:Decimal" xsi:type="Divide">
                     <operand localId="187" locator="94:35-94:38" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand localId="189" locator="94:42-94:53" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                        <source localId="188" locator="94:42-94:47" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="202" locator="95:5-95:61">
               <when localId="193" locator="95:10-95:17" resultTypeName="t:String" valueType="t:String" value="minute" xsi:type="Literal"/>
               <then localId="201" locator="95:24-95:61" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="199" locator="95:24-95:56" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="194" locator="95:24-95:32" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="198" locator="95:36-95:56" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="195" locator="95:37-95:40" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="197" locator="95:44-95:55" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="196" locator="95:44-95:49" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="200" locator="95:60-95:61" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="214" locator="96:5-96:66">
               <when localId="203" locator="96:10-96:17" resultTypeName="t:String" valueType="t:String" value="second" xsi:type="Literal"/>
               <then localId="213" locator="96:24-96:66" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="211" locator="96:24-96:61" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand localId="209" locator="96:24-96:56" resultTypeName="t:Decimal" xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand localId="204" locator="96:24-96:32" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand localId="208" locator="96:36-96:56" resultTypeName="t:Decimal" xsi:type="Divide">
                           <operand localId="205" locator="96:37-96:40" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand localId="207" locator="96:44-96:55" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                              <source localId="206" locator="96:44-96:49" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand localId="210" locator="96:60-96:61" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="212" locator="96:65-96:66" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="224" locator="97:5-97:58">
               <when localId="215" locator="97:10-97:14" resultTypeName="t:String" valueType="t:String" value="day" xsi:type="Literal"/>
               <then localId="223" locator="97:21-97:58" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="221" locator="97:21-97:53" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="216" locator="97:21-97:29" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="220" locator="97:33-97:53" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="217" locator="97:34-97:37" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="219" locator="97:41-97:52" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="218" locator="97:41-97:46" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="222" locator="97:57-97:58" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="236" locator="98:5-98:65">
               <when localId="225" locator="98:10-98:15" resultTypeName="t:String" valueType="t:String" value="week" xsi:type="Literal"/>
               <then localId="235" locator="98:22-98:65" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="231" locator="98:22-98:54" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="226" locator="98:22-98:30" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="230" locator="98:34-98:54" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="227" locator="98:35-98:38" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="229" locator="98:42-98:53" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="228" locator="98:42-98:47" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="234" locator="98:58-98:65" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="232" locator="98:59-98:60" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="233" locator="98:64" resultTypeName="t:Integer" valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="248" locator="99:5-99:67">
               <when localId="237" locator="99:10-99:16" resultTypeName="t:String" valueType="t:String" value="month" xsi:type="Literal"/>
               <then localId="247" locator="99:23-99:67" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="243" locator="99:23-99:55" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="238" locator="99:23-99:31" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="242" locator="99:35-99:55" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="239" locator="99:36-99:39" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="241" locator="99:43-99:54" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="240" locator="99:43-99:48" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="246" locator="99:59-99:67" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="244" locator="99:60-99:61" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="245" locator="99:65-99:66" resultTypeName="t:Integer" valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="260" locator="100:5-100:67">
               <when localId="249" locator="100:10-100:15" resultTypeName="t:String" valueType="t:String" value="year" xsi:type="Literal"/>
               <then localId="259" locator="100:22-100:67" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="255" locator="100:22-100:54" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="250" locator="100:22-100:30" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="254" locator="100:34-100:54" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="251" locator="100:35-100:38" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="253" locator="100:42-100:53" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="252" locator="100:42-100:47" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="258" locator="100:58-100:67" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="256" locator="100:59-100:60" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="257" locator="100:64-100:66" resultTypeName="t:Integer" valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="268" locator="101:5-101:55">
               <when localId="261" locator="101:10-101:16" resultTypeName="t:String" valueType="t:String" value="hours" xsi:type="Literal"/>
               <then localId="267" locator="101:23-101:55" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand xsi:type="ToDecimal">
                     <operand localId="262" locator="101:23-101:31" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                  </operand>
                  <operand localId="266" locator="101:35-101:55" resultTypeName="t:Decimal" xsi:type="Divide">
                     <operand localId="263" locator="101:36-101:39" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                     <operand localId="265" locator="101:43-101:54" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                        <source localId="264" locator="101:43-101:48" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="278" locator="102:5-102:62">
               <when localId="269" locator="102:10-102:18" resultTypeName="t:String" valueType="t:String" value="minutes" xsi:type="Literal"/>
               <then localId="277" locator="102:25-102:62" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="275" locator="102:25-102:57" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="270" locator="102:25-102:33" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="274" locator="102:37-102:57" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="271" locator="102:38-102:41" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="273" locator="102:45-102:56" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="272" locator="102:45-102:50" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="276" locator="102:61-102:62" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="290" locator="103:5-103:67">
               <when localId="279" locator="103:10-103:18" resultTypeName="t:String" valueType="t:String" value="seconds" xsi:type="Literal"/>
               <then localId="289" locator="103:25-103:67" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="287" locator="103:25-103:62" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand localId="285" locator="103:25-103:57" resultTypeName="t:Decimal" xsi:type="Multiply">
                        <operand xsi:type="ToDecimal">
                           <operand localId="280" locator="103:25-103:33" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand localId="284" locator="103:37-103:57" resultTypeName="t:Decimal" xsi:type="Divide">
                           <operand localId="281" locator="103:38-103:41" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                           <operand localId="283" locator="103:45-103:56" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                              <source localId="282" locator="103:45-103:50" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="ToDecimal">
                        <operand localId="286" locator="103:61-103:62" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="288" locator="103:66-103:67" resultTypeName="t:Integer" valueType="t:Integer" value="60" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="300" locator="104:5-104:59">
               <when localId="291" locator="104:10-104:15" resultTypeName="t:String" valueType="t:String" value="days" xsi:type="Literal"/>
               <then localId="299" locator="104:22-104:59" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="297" locator="104:22-104:54" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="292" locator="104:22-104:30" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="296" locator="104:34-104:54" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="293" locator="104:35-104:38" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="295" locator="104:42-104:53" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="294" locator="104:42-104:47" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="298" locator="104:58-104:59" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="312" locator="105:5-105:66">
               <when localId="301" locator="105:10-105:16" resultTypeName="t:String" valueType="t:String" value="weeks" xsi:type="Literal"/>
               <then localId="311" locator="105:23-105:66" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="307" locator="105:23-105:55" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="302" locator="105:23-105:31" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="306" locator="105:35-105:55" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="303" locator="105:36-105:39" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="305" locator="105:43-105:54" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="304" locator="105:43-105:48" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="310" locator="105:59-105:66" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="308" locator="105:60-105:61" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="309" locator="105:65" resultTypeName="t:Integer" valueType="t:Integer" value="7" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="324" locator="106:5-106:68">
               <when localId="313" locator="106:10-106:17" resultTypeName="t:String" valueType="t:String" value="months" xsi:type="Literal"/>
               <then localId="323" locator="106:24-106:68" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="319" locator="106:24-106:56" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="314" locator="106:24-106:32" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="318" locator="106:36-106:56" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="315" locator="106:37-106:40" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="317" locator="106:44-106:55" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="316" locator="106:44-106:49" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="322" locator="106:60-106:68" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="320" locator="106:61-106:62" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="321" locator="106:66-106:67" resultTypeName="t:Integer" valueType="t:Integer" value="30" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="336" locator="107:5-107:68">
               <when localId="325" locator="107:10-107:16" resultTypeName="t:String" valueType="t:String" value="years" xsi:type="Literal"/>
               <then localId="335" locator="107:23-107:68" resultTypeName="t:Decimal" xsi:type="Divide">
                  <operand localId="331" locator="107:23-107:55" resultTypeName="t:Decimal" xsi:type="Multiply">
                     <operand xsi:type="ToDecimal">
                        <operand localId="326" locator="107:23-107:31" resultTypeName="t:Integer" name="frequency" xsi:type="OperandRef"/>
                     </operand>
                     <operand localId="330" locator="107:35-107:55" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="327" locator="107:36-107:39" resultTypeName="t:Decimal" valueType="t:Decimal" value="24.0" xsi:type="Literal"/>
                        <operand localId="329" locator="107:43-107:54" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="328" locator="107:43-107:48" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="334" locator="107:59-107:68" resultTypeName="t:Integer" xsi:type="Multiply">
                        <operand localId="332" locator="107:60-107:61" resultTypeName="t:Integer" valueType="t:Integer" value="24" xsi:type="Literal"/>
                        <operand localId="333" locator="107:65-107:67" resultTypeName="t:Integer" valueType="t:Integer" value="365" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <else asType="t:Decimal" xsi:type="As">
               <operand localId="345" locator="108:10-108:103" resultTypeName="t:Any" xsi:type="Message">
                  <source localId="337" locator="108:18-108:21" resultTypeName="t:Any" xsi:type="Null"/>
                  <condition localId="338" locator="108:24-108:27" resultTypeName="t:Boolean" valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code localId="339" locator="108:30-108:59" resultTypeName="t:String" valueType="t:String" value="CMDLogic.ToDaily.UnknownUnit" xsi:type="Literal"/>
                  <severity localId="340" locator="108:62-108:71" resultTypeName="t:String" name="ErrorLevel" xsi:type="ParameterRef"/>
                  <message localId="344" locator="108:74-108:102" resultTypeName="t:String" xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand localId="341" locator="108:74-108:88" resultTypeName="t:String" valueType="t:String" value="Unknown unit " xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand localId="343" locator="108:92-108:102" resultTypeName="t:String" path="unit" xsi:type="Property">
                           <source localId="342" locator="108:92-108:97" resultTypeName="t:Quantity" name="period" xsi:type="OperandRef"/>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="frequency">
            <operandTypeSpecifier localId="105" locator="85:35-85:48" resultTypeName="t:Integer" name="t:Integer" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="period">
            <operandTypeSpecifier localId="106" locator="85:58-85:72" resultTypeName="t:Quantity" name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="594" locator="117:1-170:5" resultTypeName="t:Decimal" name="ToDaily" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="594">
               <a:s>/*
  Returns a daily frequency for the given code representation of frequency.
  The function expects codes from the [EventTiming](http://hl7.org/fhir/codesystem-event-timing.html) or
  [V3TimingEvent](http://hl7.org/fhir/v3/TimingEvent/cs.html) code systems.
  // TODO: Determine whether or not we should use timing.code at all....
*/
define function ToDaily(frequency </a:s>
               <a:s r="348">
                  <a:s>Code</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="593">
                  <a:s r="593">
                     <a:s>case
    </a:s>
                     <a:s r="353">
                        <a:s>when </a:s>
                        <a:s r="351">
                           <a:s r="349">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="350">
                              <a:s>&quot;HS&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="352"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] before the hour of sleep (or trying to)
    </a:s>
                     <a:s r="358">
                        <a:s>when </a:s>
                        <a:s r="356">
                           <a:s r="354">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="355">
                              <a:s>&quot;WAKE&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="357"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] after waking
    </a:s>
                     <a:s r="363">
                        <a:s>when </a:s>
                        <a:s r="361">
                           <a:s r="359">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="360">
                              <a:s>&quot;C&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="362"> then 3</a:s>
                     </a:s>
                     <a:s> // event occurs at a meal (from the Latin cibus)
    </a:s>
                     <a:s r="368">
                        <a:s>when </a:s>
                        <a:s r="366">
                           <a:s r="364">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="365">
                              <a:s>&quot;CM&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="367"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs at breakfast (from the Latin cibus matutinus)
    </a:s>
                     <a:s r="373">
                        <a:s>when </a:s>
                        <a:s r="371">
                           <a:s r="369">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="370">
                              <a:s>&quot;CD&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="372"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs at lunch (from the Latin cibus diurnus)
    </a:s>
                     <a:s r="378">
                        <a:s>when </a:s>
                        <a:s r="376">
                           <a:s r="374">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="375">
                              <a:s>&quot;CV&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="377"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs at dinner (from the Latin ante cibus vespertinus)
    </a:s>
                     <a:s r="383">
                        <a:s>when </a:s>
                        <a:s r="381">
                           <a:s r="379">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="380">
                              <a:s>&quot;AC&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="382"> then 3</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] before a meal (from the Latin ante cibus)
    </a:s>
                     <a:s r="388">
                        <a:s>when </a:s>
                        <a:s r="386">
                           <a:s r="384">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="385">
                              <a:s>&quot;ACM&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="387"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] before breakfast (from the Latin ante cibus matutinus)
    </a:s>
                     <a:s r="393">
                        <a:s>when </a:s>
                        <a:s r="391">
                           <a:s r="389">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="390">
                              <a:s>&quot;ACD&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="392"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] before lunch (from the Latin ante cibus diurnus)
    </a:s>
                     <a:s r="398">
                        <a:s>when </a:s>
                        <a:s r="396">
                           <a:s r="394">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="395">
                              <a:s>&quot;ACV&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="397"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] before dinner (from the Latin ante cibus vespertinus)
    </a:s>
                     <a:s r="403">
                        <a:s>when </a:s>
                        <a:s r="401">
                           <a:s r="399">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="400">
                              <a:s>&quot;PC&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="402"> then 3</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] after a meal (from the Latin post cibus)
    </a:s>
                     <a:s r="408">
                        <a:s>when </a:s>
                        <a:s r="406">
                           <a:s r="404">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="405">
                              <a:s>&quot;PCM&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="407"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] after breakfast (from the Latin post cibus matutinus)
    </a:s>
                     <a:s r="413">
                        <a:s>when </a:s>
                        <a:s r="411">
                           <a:s r="409">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="410">
                              <a:s>&quot;PCD&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="412"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] after lunch (from the Latin post cibus diurnus)
    </a:s>
                     <a:s r="418">
                        <a:s>when </a:s>
                        <a:s r="416">
                           <a:s r="414">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="415">
                              <a:s>&quot;PCV&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="417"> then 1</a:s>
                     </a:s>
                     <a:s> // event occurs [offset] after dinner (from the Latin post cibus vespertinus)

    </a:s>
                     <a:s r="423">
                        <a:s>when </a:s>
                        <a:s r="421">
                           <a:s r="419">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="420">
                              <a:s>&quot;MORN&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="422"> then 1</a:s>
                     </a:s>
                     <a:s> // Event occurs during the morning. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="428">
                        <a:s>when </a:s>
                        <a:s r="426">
                           <a:s r="424">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="425">
                              <a:s>&quot;MORN.early&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="427"> then 1</a:s>
                     </a:s>
                     <a:s> // Early Morning  Event occurs during the early morning. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="433">
                        <a:s>when </a:s>
                        <a:s r="431">
                           <a:s r="429">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="430">
                              <a:s>&quot;MORN.late&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="432"> then 1</a:s>
                     </a:s>
                     <a:s> // Late Morning   Event occurs during the late morning. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="438">
                        <a:s>when </a:s>
                        <a:s r="436">
                           <a:s r="434">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="435">
                              <a:s>&quot;NOON&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="437"> then 1</a:s>
                     </a:s>
                     <a:s> // Noon  Event occurs around 12:00pm. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="443">
                        <a:s>when </a:s>
                        <a:s r="441">
                           <a:s r="439">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="440">
                              <a:s>&quot;AFT&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="442"> then 1</a:s>
                     </a:s>
                     <a:s> // Afternoon   Event occurs during the afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="448">
                        <a:s>when </a:s>
                        <a:s r="446">
                           <a:s r="444">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="445">
                              <a:s>&quot;AFT.early&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="447"> then 1</a:s>
                     </a:s>
                     <a:s> // Early Afternoon   Event occurs during the early afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="453">
                        <a:s>when </a:s>
                        <a:s r="451">
                           <a:s r="449">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="450">
                              <a:s>&quot;AFT.late&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="452"> then 1</a:s>
                     </a:s>
                     <a:s> // Late Afternoon Event occurs during the late afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="458">
                        <a:s>when </a:s>
                        <a:s r="456">
                           <a:s r="454">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="455">
                              <a:s>&quot;EVE&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="457"> then 1</a:s>
                     </a:s>
                     <a:s> // Evening  Event occurs during the evening. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="463">
                        <a:s>when </a:s>
                        <a:s r="461">
                           <a:s r="459">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="460">
                              <a:s>&quot;EVE.early&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="462"> then 1</a:s>
                     </a:s>
                     <a:s> // Early Evening  Event occurs during the early evening. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="468">
                        <a:s>when </a:s>
                        <a:s r="466">
                           <a:s r="464">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="465">
                              <a:s>&quot;EVE.late&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="467"> then 1</a:s>
                     </a:s>
                     <a:s> // Late Evening   Event occurs during the late evening. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="473">
                        <a:s>when </a:s>
                        <a:s r="471">
                           <a:s r="469">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="470">
                              <a:s>&quot;NIGHT&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="472"> then 1</a:s>
                     </a:s>
                     <a:s> // Night Event occurs during the night. The exact time is unspecified and established by institution convention or patient interpretation.
    </a:s>
                     <a:s r="478">
                        <a:s>when </a:s>
                        <a:s r="476">
                           <a:s r="474">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="475">
                              <a:s>&quot;PHS&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="477"> then 1</a:s>
                     </a:s>
                     <a:s> // After Sleep Event occurs [offset] after subject goes to sleep. The exact time is unspecified and established by institution convention or patient interpretation.

    </a:s>
                     <a:s r="483">
                        <a:s>when </a:s>
                        <a:s r="481">
                           <a:s r="479">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="480">
                              <a:s>&quot;Once daily (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="482"> then 1.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="488">
                        <a:s>when </a:s>
                        <a:s r="486">
                           <a:s r="484">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="485">
                              <a:s>&quot;Twice a day (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="487"> then 2.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="493">
                        <a:s>when </a:s>
                        <a:s r="491">
                           <a:s r="489">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="490">
                              <a:s>&quot;Three times daily (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="492"> then 3.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="498">
                        <a:s>when </a:s>
                        <a:s r="496">
                           <a:s r="494">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="495">
                              <a:s>&quot;Four times daily (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="497"> then 4.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="503">
                        <a:s>when </a:s>
                        <a:s r="501">
                           <a:s r="499">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="500">
                              <a:s>&quot;Every twenty four hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="502"> then 1.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="508">
                        <a:s>when </a:s>
                        <a:s r="506">
                           <a:s r="504">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="505">
                              <a:s>&quot;Every twelve hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="507"> then 2.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="513">
                        <a:s>when </a:s>
                        <a:s r="511">
                           <a:s r="509">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="510">
                              <a:s>&quot;Every thirty six hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="512"> then 0.67</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="518">
                        <a:s>when </a:s>
                        <a:s r="516">
                           <a:s r="514">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="515">
                              <a:s>&quot;Every eight hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="517"> then 3.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="523">
                        <a:s>when </a:s>
                        <a:s r="521">
                           <a:s r="519">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="520">
                              <a:s>&quot;Every four hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="522"> then 6.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="528">
                        <a:s>when </a:s>
                        <a:s r="526">
                           <a:s r="524">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="525">
                              <a:s>&quot;Every six hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="527"> then 4.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="533">
                        <a:s>when </a:s>
                        <a:s r="531">
                           <a:s r="529">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="530">
                              <a:s>&quot;Every seventy two hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="532"> then 0.33</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="538">
                        <a:s>when </a:s>
                        <a:s r="536">
                           <a:s r="534">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="535">
                              <a:s>&quot;Every forty eight hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="537"> then 0.5</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="543">
                        <a:s>when </a:s>
                        <a:s r="541">
                           <a:s r="539">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="540">
                              <a:s>&quot;Every eight to twelve hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="542"> then 3.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="548">
                        <a:s>when </a:s>
                        <a:s r="546">
                           <a:s r="544">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="545">
                              <a:s>&quot;Every six to eight hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="547"> then 4.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="553">
                        <a:s>when </a:s>
                        <a:s r="551">
                           <a:s r="549">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="550">
                              <a:s>&quot;Every three to four hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="552"> then 8.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="558">
                        <a:s>when </a:s>
                        <a:s r="556">
                           <a:s r="554">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="555">
                              <a:s>&quot;Every three to six hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="557"> then 8.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="563">
                        <a:s>when </a:s>
                        <a:s r="561">
                           <a:s r="559">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="560">
                              <a:s>&quot;Every two to four hours (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="562"> then 12.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="568">
                        <a:s>when </a:s>
                        <a:s r="566">
                           <a:s r="564">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="565">
                              <a:s>&quot;One to four times a day (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="567"> then 4.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="573">
                        <a:s>when </a:s>
                        <a:s r="571">
                           <a:s r="569">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="570">
                              <a:s>&quot;One to three times a day (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="572"> then 3.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="578">
                        <a:s>when </a:s>
                        <a:s r="576">
                           <a:s r="574">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="575">
                              <a:s>&quot;One to two times a day (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="577"> then 2.0</a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="583">
                        <a:s>when </a:s>
                        <a:s r="581">
                           <a:s r="579">
                              <a:s>frequency</a:s>
                           </a:s>
                           <a:s> ~ </a:s>
                           <a:s r="580">
                              <a:s>&quot;Two to four times a day (qualifier value)&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="582"> then 4.0</a:s>
                     </a:s>
                     <a:s>

    else </a:s>
                     <a:s r="592">
                        <a:s r="584">Message(null, true, </a:s>
                        <a:s r="586">
                           <a:s>'CMDLogic.ToDaily.UnknownFrequencyCode'</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="587">
                           <a:s>ErrorLevel</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="591">
                           <a:s r="588">
                              <a:s>'Unknown frequency code '</a:s>
                           </a:s>
                           <a:s> &amp; </a:s>
                           <a:s r="590">
                              <a:s r="589">
                                 <a:s>frequency</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="590">
                                 <a:s>code</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>
  end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="593" locator="118:3-170:5" resultTypeName="t:Decimal" xsi:type="Case">
            <caseItem localId="353" locator="119:5-119:32">
               <when localId="351" locator="119:10-119:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="349" locator="119:10-119:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="350" locator="119:22-119:25" resultTypeName="t:Code" name="HS" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="352" locator="119:32" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="358" locator="120:5-120:34">
               <when localId="356" locator="120:10-120:27" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="354" locator="120:10-120:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="355" locator="120:22-120:27" resultTypeName="t:Code" name="WAKE" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="357" locator="120:34" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="363" locator="121:5-121:31">
               <when localId="361" locator="121:10-121:24" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="359" locator="121:10-121:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="360" locator="121:22-121:24" resultTypeName="t:Code" name="C" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="362" locator="121:31" resultTypeName="t:Integer" valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="368" locator="122:5-122:32">
               <when localId="366" locator="122:10-122:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="364" locator="122:10-122:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="365" locator="122:22-122:25" resultTypeName="t:Code" name="CM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="367" locator="122:32" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="373" locator="123:5-123:32">
               <when localId="371" locator="123:10-123:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="369" locator="123:10-123:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="370" locator="123:22-123:25" resultTypeName="t:Code" name="CD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="372" locator="123:32" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="378" locator="124:5-124:32">
               <when localId="376" locator="124:10-124:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="374" locator="124:10-124:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="375" locator="124:22-124:25" resultTypeName="t:Code" name="CV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="377" locator="124:32" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="383" locator="125:5-125:32">
               <when localId="381" locator="125:10-125:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="379" locator="125:10-125:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="380" locator="125:22-125:25" resultTypeName="t:Code" name="AC" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="382" locator="125:32" resultTypeName="t:Integer" valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="388" locator="126:5-126:33">
               <when localId="386" locator="126:10-126:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="384" locator="126:10-126:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="385" locator="126:22-126:26" resultTypeName="t:Code" name="ACM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="387" locator="126:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="393" locator="127:5-127:33">
               <when localId="391" locator="127:10-127:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="389" locator="127:10-127:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="390" locator="127:22-127:26" resultTypeName="t:Code" name="ACD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="392" locator="127:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="398" locator="128:5-128:33">
               <when localId="396" locator="128:10-128:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="394" locator="128:10-128:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="395" locator="128:22-128:26" resultTypeName="t:Code" name="ACV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="397" locator="128:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="403" locator="129:5-129:32">
               <when localId="401" locator="129:10-129:25" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="399" locator="129:10-129:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="400" locator="129:22-129:25" resultTypeName="t:Code" name="PC" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="402" locator="129:32" resultTypeName="t:Integer" valueType="t:Integer" value="3" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="408" locator="130:5-130:33">
               <when localId="406" locator="130:10-130:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="404" locator="130:10-130:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="405" locator="130:22-130:26" resultTypeName="t:Code" name="PCM" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="407" locator="130:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="413" locator="131:5-131:33">
               <when localId="411" locator="131:10-131:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="409" locator="131:10-131:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="410" locator="131:22-131:26" resultTypeName="t:Code" name="PCD" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="412" locator="131:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="418" locator="132:5-132:33">
               <when localId="416" locator="132:10-132:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="414" locator="132:10-132:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="415" locator="132:22-132:26" resultTypeName="t:Code" name="PCV" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="417" locator="132:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="423" locator="134:5-134:34">
               <when localId="421" locator="134:10-134:27" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="419" locator="134:10-134:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="420" locator="134:22-134:27" resultTypeName="t:Code" name="MORN" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="422" locator="134:34" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="428" locator="135:5-135:40">
               <when localId="426" locator="135:10-135:33" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="424" locator="135:10-135:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="425" locator="135:22-135:33" resultTypeName="t:Code" name="MORN.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="427" locator="135:40" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="433" locator="136:5-136:39">
               <when localId="431" locator="136:10-136:32" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="429" locator="136:10-136:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="430" locator="136:22-136:32" resultTypeName="t:Code" name="MORN.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="432" locator="136:39" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="438" locator="137:5-137:34">
               <when localId="436" locator="137:10-137:27" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="434" locator="137:10-137:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="435" locator="137:22-137:27" resultTypeName="t:Code" name="NOON" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="437" locator="137:34" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="443" locator="138:5-138:33">
               <when localId="441" locator="138:10-138:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="439" locator="138:10-138:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="440" locator="138:22-138:26" resultTypeName="t:Code" name="AFT" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="442" locator="138:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="448" locator="139:5-139:39">
               <when localId="446" locator="139:10-139:32" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="444" locator="139:10-139:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="445" locator="139:22-139:32" resultTypeName="t:Code" name="AFT.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="447" locator="139:39" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="453" locator="140:5-140:38">
               <when localId="451" locator="140:10-140:31" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="449" locator="140:10-140:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="450" locator="140:22-140:31" resultTypeName="t:Code" name="AFT.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="452" locator="140:38" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="458" locator="141:5-141:33">
               <when localId="456" locator="141:10-141:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="454" locator="141:10-141:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="455" locator="141:22-141:26" resultTypeName="t:Code" name="EVE" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="457" locator="141:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="463" locator="142:5-142:39">
               <when localId="461" locator="142:10-142:32" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="459" locator="142:10-142:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="460" locator="142:22-142:32" resultTypeName="t:Code" name="EVE.early" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="462" locator="142:39" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="468" locator="143:5-143:38">
               <when localId="466" locator="143:10-143:31" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="464" locator="143:10-143:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="465" locator="143:22-143:31" resultTypeName="t:Code" name="EVE.late" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="467" locator="143:38" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="473" locator="144:5-144:35">
               <when localId="471" locator="144:10-144:28" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="469" locator="144:10-144:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="470" locator="144:22-144:28" resultTypeName="t:Code" name="NIGHT" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="472" locator="144:35" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="478" locator="145:5-145:33">
               <when localId="476" locator="145:10-145:26" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="474" locator="145:10-145:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="475" locator="145:22-145:26" resultTypeName="t:Code" name="PHS" xsi:type="CodeRef"/>
               </when>
               <then xsi:type="ToDecimal">
                  <operand localId="477" locator="145:33" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
               </then>
            </caseItem>
            <caseItem localId="483" locator="147:5-147:60">
               <when localId="481" locator="147:10-147:51" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="479" locator="147:10-147:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="480" locator="147:22-147:51" resultTypeName="t:Code" name="Once daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="482" locator="147:58-147:60" resultTypeName="t:Decimal" valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="488" locator="148:5-148:61">
               <when localId="486" locator="148:10-148:52" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="484" locator="148:10-148:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="485" locator="148:22-148:52" resultTypeName="t:Code" name="Twice a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="487" locator="148:59-148:61" resultTypeName="t:Decimal" valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="493" locator="149:5-149:67">
               <when localId="491" locator="149:10-149:58" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="489" locator="149:10-149:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="490" locator="149:22-149:58" resultTypeName="t:Code" name="Three times daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="492" locator="149:65-149:67" resultTypeName="t:Decimal" valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="498" locator="150:5-150:66">
               <when localId="496" locator="150:10-150:57" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="494" locator="150:10-150:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="495" locator="150:22-150:57" resultTypeName="t:Code" name="Four times daily (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="497" locator="150:64-150:66" resultTypeName="t:Decimal" valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="503" locator="151:5-151:73">
               <when localId="501" locator="151:10-151:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="499" locator="151:10-151:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="500" locator="151:22-151:64" resultTypeName="t:Code" name="Every twenty four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="502" locator="151:71-151:73" resultTypeName="t:Decimal" valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="508" locator="152:5-152:68">
               <when localId="506" locator="152:10-152:59" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="504" locator="152:10-152:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="505" locator="152:22-152:59" resultTypeName="t:Code" name="Every twelve hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="507" locator="152:66-152:68" resultTypeName="t:Decimal" valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="513" locator="153:5-153:73">
               <when localId="511" locator="153:10-153:63" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="509" locator="153:10-153:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="510" locator="153:22-153:63" resultTypeName="t:Code" name="Every thirty six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="512" locator="153:70-153:73" resultTypeName="t:Decimal" valueType="t:Decimal" value="0.67" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="518" locator="154:5-154:67">
               <when localId="516" locator="154:10-154:58" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="514" locator="154:10-154:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="515" locator="154:22-154:58" resultTypeName="t:Code" name="Every eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="517" locator="154:65-154:67" resultTypeName="t:Decimal" valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="523" locator="155:5-155:66">
               <when localId="521" locator="155:10-155:57" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="519" locator="155:10-155:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="520" locator="155:22-155:57" resultTypeName="t:Code" name="Every four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="522" locator="155:64-155:66" resultTypeName="t:Decimal" valueType="t:Decimal" value="6.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="528" locator="156:5-156:65">
               <when localId="526" locator="156:10-156:56" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="524" locator="156:10-156:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="525" locator="156:22-156:56" resultTypeName="t:Code" name="Every six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="527" locator="156:63-156:65" resultTypeName="t:Decimal" valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="533" locator="157:5-157:74">
               <when localId="531" locator="157:10-157:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="529" locator="157:10-157:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="530" locator="157:22-157:64" resultTypeName="t:Code" name="Every seventy two hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="532" locator="157:71-157:74" resultTypeName="t:Decimal" valueType="t:Decimal" value="0.33" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="538" locator="158:5-158:73">
               <when localId="536" locator="158:10-158:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="534" locator="158:10-158:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="535" locator="158:22-158:64" resultTypeName="t:Code" name="Every forty eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="537" locator="158:71-158:73" resultTypeName="t:Decimal" valueType="t:Decimal" value="0.5" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="543" locator="159:5-159:77">
               <when localId="541" locator="159:10-159:68" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="539" locator="159:10-159:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="540" locator="159:22-159:68" resultTypeName="t:Code" name="Every eight to twelve hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="542" locator="159:75-159:77" resultTypeName="t:Decimal" valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="548" locator="160:5-160:74">
               <when localId="546" locator="160:10-160:65" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="544" locator="160:10-160:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="545" locator="160:22-160:65" resultTypeName="t:Code" name="Every six to eight hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="547" locator="160:72-160:74" resultTypeName="t:Decimal" valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="553" locator="161:5-161:75">
               <when localId="551" locator="161:10-161:66" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="549" locator="161:10-161:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="550" locator="161:22-161:66" resultTypeName="t:Code" name="Every three to four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="552" locator="161:73-161:75" resultTypeName="t:Decimal" valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="558" locator="162:5-162:74">
               <when localId="556" locator="162:10-162:65" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="554" locator="162:10-162:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="555" locator="162:22-162:65" resultTypeName="t:Code" name="Every three to six hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="557" locator="162:72-162:74" resultTypeName="t:Decimal" valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="563" locator="163:5-163:74">
               <when localId="561" locator="163:10-163:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="559" locator="163:10-163:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="560" locator="163:22-163:64" resultTypeName="t:Code" name="Every two to four hours (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="562" locator="163:71-163:74" resultTypeName="t:Decimal" valueType="t:Decimal" value="12.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="568" locator="164:5-164:73">
               <when localId="566" locator="164:10-164:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="564" locator="164:10-164:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="565" locator="164:22-164:64" resultTypeName="t:Code" name="One to four times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="567" locator="164:71-164:73" resultTypeName="t:Decimal" valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="573" locator="165:5-165:74">
               <when localId="571" locator="165:10-165:65" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="569" locator="165:10-165:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="570" locator="165:22-165:65" resultTypeName="t:Code" name="One to three times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="572" locator="165:72-165:74" resultTypeName="t:Decimal" valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="578" locator="166:5-166:72">
               <when localId="576" locator="166:10-166:63" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="574" locator="166:10-166:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="575" locator="166:22-166:63" resultTypeName="t:Code" name="One to two times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="577" locator="166:70-166:72" resultTypeName="t:Decimal" valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </caseItem>
            <caseItem localId="583" locator="167:5-167:73">
               <when localId="581" locator="167:10-167:64" resultTypeName="t:Boolean" xsi:type="Equivalent">
                  <operand localId="579" locator="167:10-167:18" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                  <operand localId="580" locator="167:22-167:64" resultTypeName="t:Code" name="Two to four times a day (qualifier value)" xsi:type="CodeRef"/>
               </when>
               <then localId="582" locator="167:71-167:73" resultTypeName="t:Decimal" valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            </caseItem>
            <else asType="t:Decimal" xsi:type="As">
               <operand localId="592" locator="169:10-169:125" resultTypeName="t:Any" xsi:type="Message">
                  <source localId="584" locator="169:18-169:21" resultTypeName="t:Any" xsi:type="Null"/>
                  <condition localId="585" locator="169:24-169:27" resultTypeName="t:Boolean" valueType="t:Boolean" value="true" xsi:type="Literal"/>
                  <code localId="586" locator="169:30-169:68" resultTypeName="t:String" valueType="t:String" value="CMDLogic.ToDaily.UnknownFrequencyCode" xsi:type="Literal"/>
                  <severity localId="587" locator="169:71-169:80" resultTypeName="t:String" name="ErrorLevel" xsi:type="ParameterRef"/>
                  <message localId="591" locator="169:83-169:124" resultTypeName="t:String" xsi:type="Concatenate">
                     <operand xsi:type="Coalesce">
                        <operand localId="588" locator="169:83-169:107" resultTypeName="t:String" valueType="t:String" value="Unknown frequency code " xsi:type="Literal"/>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Coalesce">
                        <operand localId="590" locator="169:111-169:124" resultTypeName="t:String" path="code" xsi:type="Property">
                           <source localId="589" locator="169:111-169:119" resultTypeName="t:Code" name="frequency" xsi:type="OperandRef"/>
                        </operand>
                        <operand valueType="t:String" value="" xsi:type="Literal"/>
                     </operand>
                  </message>
               </operand>
            </else>
         </expression>
         <operand name="frequency">
            <operandTypeSpecifier localId="348" locator="117:35-117:38" resultTypeName="t:Code" name="t:Code" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="632" locator="478:1-482:8" resultTypeName="t:Quantity" name="Quantity" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="632">
               <a:s>/**********************************************************************/
/* Functions in this region are copied from opioid-mme-r4             */
/**********************************************************************/
define function Quantity(value </a:s>
               <a:s r="623">
                  <a:s>Decimal</a:s>
               </a:s>
               <a:s>, unit </a:s>
               <a:s r="624">
                  <a:s>String</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="631">
                  <a:s r="631">
                     <a:s>if </a:s>
                     <a:s r="626">
                        <a:s r="625">
                           <a:s>value</a:s>
                        </a:s>
                        <a:s> is not null</a:s>
                     </a:s>
                     <a:s> then
    </a:s>
                     <a:s r="629">
                        <a:s>System.Quantity { </a:s>
                        <a:s>
                           <a:s>value: </a:s>
                           <a:s r="627">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s>
                           <a:s>unit: </a:s>
                           <a:s r="628">
                              <a:s>unit</a:s>
                           </a:s>
                        </a:s>
                        <a:s> }</a:s>
                     </a:s>
                     <a:s r="630">
  else
    null</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="631" locator="479:3-482:8" resultTypeName="t:Quantity" xsi:type="If">
            <condition localId="626" locator="479:6-479:22" resultTypeName="t:Boolean" xsi:type="Not">
               <operand locator="479:6-479:22" resultTypeName="t:Boolean" xsi:type="IsNull">
                  <operand localId="625" locator="479:6-479:10" resultTypeName="t:Decimal" name="value" xsi:type="OperandRef"/>
               </operand>
            </condition>
            <then localId="629" locator="480:5-480:48" resultTypeName="t:Quantity" classType="t:Quantity" xsi:type="Instance">
               <element name="value">
                  <value localId="627" locator="480:30-480:34" resultTypeName="t:Decimal" name="value" xsi:type="OperandRef"/>
               </element>
               <element name="unit">
                  <value localId="628" locator="480:43-480:46" resultTypeName="t:String" name="unit" xsi:type="OperandRef"/>
               </element>
            </then>
            <else asType="t:Quantity" xsi:type="As">
               <operand localId="630" locator="482:5-482:8" resultTypeName="t:Any" xsi:type="Null"/>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier localId="623" locator="478:32-478:38" resultTypeName="t:Decimal" name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="unit">
            <operandTypeSpecifier localId="624" locator="478:46-478:51" resultTypeName="t:String" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="736" locator="236:1-265:12" name="MedicationRequestPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="736">
               <a:s>/*
Now that we have a ToDaily function, we can approach calculation of the
duration of medication for an order. First, consider the definitions
for each element:
* 1 and only 1 dosageInstruction
* 1 and only 1 doseAndRate
* 1 timing with 1 repeat
* frequency, frequencyMax, defaulting to 1
* period, periodUnit, defaulting to 1 'd'
* doseQuantity or doseRange
* timeOfDay
* authoredOn: The date the prescription was written
* dispenseRequest.validityPeriod: Time period supply is authorized for
* dispenseRequest.quantity: amount of medication supplied per dispense
* dispenseRequest.numberOfRepeatsAllowed: number of refills authorized
* dispenseRequest.expectedSupplyDuration: number of days supply per dispense
* dosageInstruction.timing.repeat.boundsDuration: total duration of the repeat
* dosageInstruction.timing.repeat.boundsRange: range of durations of the repeat
* dosageInstruction.timing.repeat.boundsPeriod: period bounds of the repeat
* dosageInstruction.timing.repeat.count: number of times to repeat
* dosageInstruction.timing.repeat.countMax: maximum number of times to repeat
* dosageInstruction.timing.repeat.frequency: event occurs frequency times per period
* dosageInstruction.timing.repeat.frequencyMax: event occurs up to frequencyMax times per period
* dosageInstruction.timing.repeat.period: event occurs frequency times per period
* dosageInstruction.timing.repeat.periodMax: upper limit of period
* dosageInstruction.timing.repeat.periodUnit: period duration (s | min | h | d | wk | mo | a)
* dosageInstruction.timing.repeat.timeOfDay: time of day for the event (0..*)
* dosageInstruction.timing.repeat.when: event timing (HS | WAKE | C | CM | CD | CV | AC | ACM...)
* dosageInstruction.timing.code: BID | TID | QID | AM | PM | QD | QOD...
* dosageInstruction.asNeeded
* dosageInstruction.doseAndRate.doseQuantity
* dosageInstruction.doseAndRate.doseRange
If expectedSupplyDuration is present, then the duration is
    expectedSupplyDuration * (1 + numberOfRepeatsAllowed)
If expectedSupplyDuration is not present, then it must be calculated based on the quantity, dosage, and frequency:
    (quantity / (dosage * frequency)) * (1 + numberOfRepeatsAllowed)
    dosage: Coalesce(end of doseAndRate.doseRange, doseAndRate.doseQuantity)
    frequency: Coalesce(frequencyMax, frequency)
    period: Quantity(period, periodUnit)
If expectedSupplyDuration is not present and cannot be calculated, and the boundsPeriod is present (and completely specified), we can use that directly
    dosage.timing.repeat.boundsPeriod
This calculation results in a number of days, which can then be turned into a period by anchoring that to the
start of the validityPeriod or the authoredOn:
    Interval[earliestDispensable, earliestDispensable + expectedSupplyDuration - 1]
    earliestDispensable: Coalesce(start of validityPeriod, authoredOn)
The following function illustrates this completely:
*/

/*
Calculates the Medication Period for a single MedicationRequest.
MedicationRequest instances provided to this function are expected
to conform to the [MMEMedicationRequest](http://build.fhir.org/ig/cqframework/opioid-mme-r4/StructureDefinition-mmemedicationrequest.html)
profile, which expects:
* 1 and only 1 dosageInstruction, multiple dosageInstruction elements will result in an error
* 1 and only 1 doseAndRate, multiple doseAndRate elements will result in an error
* 1 timing with 1 repeat, missing timing or repeat elements will result in a null
* frequency, frequencyMax, defaulting to 1
* period, periodUnit, defaulting to 1 'd'
* timeOfDay
* doseQuantity or doseRange, missing doseQuantity and doseRange will result in a null
Note that MedicationRequest status is not considered by this calculation, as the
list of MedicationRequest instances provided to this function should already have
considered appropriate statuses, depending on the use case, typically `completed`.
*/
define function MedicationRequestPeriod(Request </a:s>
               <a:s r="595">
                  <a:s>&quot;MedicationRequest&quot;</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="735">
                  <a:s r="735">
                     <a:s>
                        <a:s r="597">
                           <a:s r="596">
                              <a:s>
                                 <a:s>Request</a:s>
                              </a:s>
                           </a:s>
                           <a:s> R</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let
      </a:s>
                        <a:s r="601">
                           <a:s>dosage: </a:s>
                           <a:s r="600">
                              <a:s>singleton from </a:s>
                              <a:s r="599">
                                 <a:s r="598">
                                    <a:s>R</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="599">
                                    <a:s>dosageInstruction</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="605">
                           <a:s>doseAndRate: </a:s>
                           <a:s r="604">
                              <a:s>singleton from </a:s>
                              <a:s r="603">
                                 <a:s r="602">
                                    <a:s>dosage</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="603">
                                    <a:s>doseAndRate</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="608">
                           <a:s>timing: </a:s>
                           <a:s r="607">
                              <a:s r="606">
                                 <a:s>dosage</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="607">
                                 <a:s>timing</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="616">
                           <a:s>frequency: </a:s>
                           <a:s r="615">
                              <a:s>Coalesce(</a:s>
                              <a:s r="611">
                                 <a:s r="610">
                                    <a:s r="609">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="610">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="611">
                                    <a:s>frequencyMax</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="614">
                                 <a:s r="613">
                                    <a:s r="612">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="613">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="614">
                                    <a:s>frequency</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="634">
                           <a:s>period: </a:s>
                           <a:s r="633">
                              <a:s>Quantity(</a:s>
                              <a:s r="619">
                                 <a:s r="618">
                                    <a:s r="617">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="618">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="619">
                                    <a:s>period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="622">
                                 <a:s r="621">
                                    <a:s r="620">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="621">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="622">
                                    <a:s>periodUnit</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="637">
                           <a:s>doseRange: </a:s>
                           <a:s r="636">
                              <a:s r="635">
                                 <a:s>doseAndRate</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="636">
                                 <a:s>dose</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="640">
                           <a:s>doseQuantity: </a:s>
                           <a:s r="639">
                              <a:s r="638">
                                 <a:s>doseAndRate</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="639">
                                 <a:s>dose</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="645">
                           <a:s>dose: </a:s>
                           <a:s r="644">
                              <a:s>Coalesce(</a:s>
                              <a:s r="642">
                                 <a:s>end of </a:s>
                                 <a:s r="641">
                                    <a:s>doseRange</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="643">
                                 <a:s>doseQuantity</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="655">
                           <a:s>dosesPerDay: </a:s>
                           <a:s r="654">
                              <a:s>Coalesce(</a:s>
                              <a:s r="648">
                                 <a:s>ToDaily(</a:s>
                                 <a:s r="646">
                                    <a:s>frequency</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="647">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="652">
                                 <a:s>Count(</a:s>
                                 <a:s r="651">
                                    <a:s r="650">
                                       <a:s r="649">
                                          <a:s>timing</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="650">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="651">
                                       <a:s>timeOfDay</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="653">, 1.0)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="662">
                           <a:s>boundsPeriod: </a:s>
                           <a:s r="661">
                              <a:s r="658">
                                 <a:s r="657">
                                    <a:s r="656">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="657">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="658">
                                    <a:s>bounds</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> as </a:s>
                              <a:s r="660">
                                 <a:s>Interval&lt;</a:s>
                                 <a:s r="659">
                                    <a:s>DateTime</a:s>
                                 </a:s>
                                 <a:s>></a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="668">
                           <a:s>daysSupply: </a:s>
                           <a:s r="667">
                              <a:s r="666">
                                 <a:s>(</a:s>
                                 <a:s r="666">
                                    <a:s>convert </a:s>
                                    <a:s r="665">
                                       <a:s r="664">
                                          <a:s r="663">
                                             <a:s>R</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="664">
                                             <a:s>dispenseRequest</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="665">
                                          <a:s>expectedSupplyDuration</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> to days</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="667">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="672">
                           <a:s>quantity: </a:s>
                           <a:s r="671">
                              <a:s r="670">
                                 <a:s r="669">
                                    <a:s>R</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="670">
                                    <a:s>dispenseRequest</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="671">
                                 <a:s>quantity</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="678">
                           <a:s>refills: </a:s>
                           <a:s r="677">
                              <a:s>Coalesce(</a:s>
                              <a:s r="675">
                                 <a:s r="674">
                                    <a:s r="673">
                                       <a:s>R</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="674">
                                       <a:s>dispenseRequest</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="675">
                                    <a:s>numberOfRepeatsAllowed</a:s>
                                 </a:s>
                              </a:s>
                              <a:s r="676">, 0)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="691">
                           <a:s>startDate:
        </a:s>
                           <a:s r="690">
                              <a:s>Coalesce(
          </a:s>
                              <a:s r="681">
                                 <a:s>date from </a:s>
                                 <a:s r="680">
                                    <a:s>start of </a:s>
                                    <a:s r="679">
                                       <a:s>boundsPeriod</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
          </a:s>
                              <a:s r="684">
                                 <a:s>date from </a:s>
                                 <a:s r="683">
                                    <a:s r="682">
                                       <a:s>R</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="683">
                                       <a:s>authoredOn</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
          </a:s>
                              <a:s r="689">
                                 <a:s>date from </a:s>
                                 <a:s r="688">
                                    <a:s>start of </a:s>
                                    <a:s r="687">
                                       <a:s r="686">
                                          <a:s r="685">
                                             <a:s>R</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="686">
                                             <a:s>dispenseRequest</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="687">
                                          <a:s>validityPeriod</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        )</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="705">
                           <a:s>totalDaysSupplied: </a:s>
                           <a:s r="704">
                              <a:s r="700">
                                 <a:s>Coalesce(</a:s>
                                 <a:s r="692">
                                    <a:s>daysSupply</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="699">
                                    <a:s r="694">
                                       <a:s r="693">
                                          <a:s>quantity</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="694">
                                          <a:s>value</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> / </a:s>
                                    <a:s r="698">
                                       <a:s>(</a:s>
                                       <a:s r="698">
                                          <a:s r="696">
                                             <a:s r="695">
                                                <a:s>dose</a:s>
                                             </a:s>
                                             <a:s>.</a:s>
                                             <a:s r="696">
                                                <a:s>value</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> * </a:s>
                                          <a:s r="697">
                                             <a:s>dosesPerDay</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s> * </a:s>
                              <a:s r="703">
                                 <a:s>(</a:s>
                                 <a:s r="703">
                                    <a:s r="701">1 + </a:s>
                                    <a:s r="702">
                                       <a:s>refills</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="734">
                        <a:s>return
      </a:s>
                        <a:s r="733">
                           <a:s>if </a:s>
                           <a:s r="710">
                              <a:s r="707">
                                 <a:s r="706">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> and </a:s>
                              <a:s r="709">
                                 <a:s r="708">
                                    <a:s>totalDaysSupplied</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                           </a:s>
                           <a:s> then
        </a:s>
                           <a:s r="719">
                              <a:s>Interval[</a:s>
                              <a:s r="711">
                                 <a:s>startDate</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="718">
                                 <a:s r="712">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> + </a:s>
                                 <a:s r="717">
                                    <a:s>Quantity(</a:s>
                                    <a:s r="715">
                                       <a:s r="713">
                                          <a:s>totalDaysSupplied</a:s>
                                       </a:s>
                                       <a:s r="714"> - 1</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="716">
                                       <a:s>'day'</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> ]</a:s>
                           </a:s>
                           <a:s>
      else </a:s>
                           <a:s r="732">
                              <a:s>if </a:s>
                              <a:s r="725">
                                 <a:s r="721">
                                    <a:s r="720">
                                       <a:s>startDate</a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                                 <a:s> and </a:s>
                                 <a:s r="724">
                                    <a:s r="723">
                                       <a:s r="722">
                                          <a:s>boundsPeriod</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="723">
                                          <a:s>&quot;high&quot;</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> is not null</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> then
        </a:s>
                              <a:s r="730">
                                 <a:s>Interval[</a:s>
                                 <a:s r="726">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="729">
                                    <a:s>date from </a:s>
                                    <a:s r="728">
                                       <a:s>end of </a:s>
                                       <a:s r="727">
                                          <a:s>boundsPeriod</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>]</a:s>
                              </a:s>
                              <a:s r="731">
      else
        null</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
         </resultTypeSpecifier>
         <expression localId="735" locator="237:3-265:12" xsi:type="Query">
            <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
            </resultTypeSpecifier>
            <source localId="597" locator="237:3-237:11" resultTypeName="fhir:MedicationRequest" alias="R">
               <expression localId="596" locator="237:3-237:9" resultTypeName="fhir:MedicationRequest" name="Request" xsi:type="OperandRef"/>
            </source>
            <let localId="601" locator="239:7-239:48" resultTypeName="fhir:Dosage" identifier="dosage">
               <expression localId="600" locator="239:15-239:48" resultTypeName="fhir:Dosage" xsi:type="SingletonFrom">
                  <operand localId="599" locator="239:30-239:48" path="dosageInstruction" scope="R" xsi:type="Property">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType name="fhir:Dosage" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                  </operand>
               </expression>
            </let>
            <let localId="605" locator="240:7-240:52" resultTypeName="fhir:Dosage.DoseAndRate" identifier="doseAndRate">
               <expression localId="604" locator="240:20-240:52" resultTypeName="fhir:Dosage.DoseAndRate" xsi:type="SingletonFrom">
                  <operand localId="603" locator="240:35-240:52" path="doseAndRate" xsi:type="Property">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType name="fhir:Dosage.DoseAndRate" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <source localId="602" locator="240:35-240:40" resultTypeName="fhir:Dosage" name="dosage" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="608" locator="241:7-241:27" resultTypeName="fhir:Timing" identifier="timing">
               <expression localId="607" locator="241:15-241:27" resultTypeName="fhir:Timing" path="timing" xsi:type="Property">
                  <source localId="606" locator="241:15-241:20" resultTypeName="fhir:Dosage" name="dosage" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <let localId="616" locator="242:7-242:78" resultTypeName="t:Integer" identifier="frequency">
               <expression localId="615" locator="242:18-242:78" resultTypeName="t:Integer" xsi:type="Coalesce">
                  <operand localId="611" locator="242:27-242:52" resultTypeName="t:Integer" path="value" xsi:type="Property">
                     <source path="frequencyMax" xsi:type="Property">
                        <source localId="610" locator="242:27-242:39" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="609" locator="242:27-242:32" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="614" locator="242:55-242:77" resultTypeName="t:Integer" path="value" xsi:type="Property">
                     <source path="frequency" xsi:type="Property">
                        <source localId="613" locator="242:55-242:67" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="612" locator="242:55-242:60" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let localId="634" locator="243:7-243:70" resultTypeName="t:Quantity" identifier="period">
               <expression localId="633" locator="243:15-243:70" resultTypeName="t:Quantity" name="Quantity" xsi:type="FunctionRef">
                  <operand localId="619" locator="243:24-243:43" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                     <source path="period" xsi:type="Property">
                        <source localId="618" locator="243:24-243:36" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="617" locator="243:24-243:29" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="622" locator="243:46-243:69" resultTypeName="fhir:UnitsOfTime" path="value" xsi:type="Property">
                     <source path="periodUnit" xsi:type="Property">
                        <source localId="621" locator="243:46-243:58" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="620" locator="243:46-243:51" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let localId="637" locator="244:7-244:33" identifier="doseRange">
               <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                  <choice xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </choice>
                  <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="636" locator="244:18-244:33" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     </choice>
                     <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand path="dose" xsi:type="Property">
                     <source localId="635" locator="244:18-244:28" resultTypeName="fhir:Dosage.DoseAndRate" name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="640" locator="245:7-245:36" identifier="doseQuantity">
               <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                  <choice xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </choice>
                  <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="639" locator="245:21-245:36" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     </choice>
                     <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand path="dose" xsi:type="Property">
                     <source localId="638" locator="245:21-245:31" resultTypeName="fhir:Dosage.DoseAndRate" name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="645" locator="246:7-246:52" resultTypeName="t:Quantity" identifier="dose">
               <expression localId="644" locator="246:13-246:52" resultTypeName="t:Quantity" xsi:type="Coalesce">
                  <operand localId="642" locator="246:22-246:37" resultTypeName="t:Quantity" xsi:type="End">
                     <operand xsi:type="As">
                        <operand localId="641" locator="246:29-246:37" name="doseRange" xsi:type="QueryLetRef">
                           <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                              <choice xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                              </choice>
                              <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                        </operand>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
                  <operand asType="t:Quantity" xsi:type="As">
                     <operand localId="643" locator="246:40-246:51" name="doseQuantity" xsi:type="QueryLetRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           </choice>
                           <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let localId="655" locator="247:7-247:92" resultTypeName="t:Decimal" identifier="dosesPerDay">
               <expression localId="654" locator="247:20-247:92" resultTypeName="t:Decimal" xsi:type="Coalesce">
                  <operand localId="648" locator="247:29-247:54" resultTypeName="t:Decimal" name="ToDaily" xsi:type="FunctionRef">
                     <operand localId="646" locator="247:37-247:45" resultTypeName="t:Integer" name="frequency" xsi:type="QueryLetRef"/>
                     <operand localId="647" locator="247:48-247:53" resultTypeName="t:Quantity" name="period" xsi:type="QueryLetRef"/>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="652" locator="247:57-247:86" resultTypeName="t:Integer" xsi:type="Count">
                        <source localId="651" locator="247:63-247:85" path="value" xsi:type="Property">
                           <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                              <elementType name="t:Time" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <source path="timeOfDay" xsi:type="Property">
                              <source localId="650" locator="247:63-247:75" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                                 <source localId="649" locator="247:63-247:68" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                              </source>
                           </source>
                        </source>
                     </operand>
                  </operand>
                  <operand localId="653" locator="247:89-247:91" resultTypeName="t:Decimal" valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               </expression>
            </let>
            <let localId="662" locator="248:7-248:62" identifier="boundsPeriod">
               <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="661" locator="248:21-248:62" strict="false" xsi:type="As">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand localId="658" locator="248:21-248:40" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                        <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        <choice xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </choice>
                        <choice xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </choice>
                     </resultTypeSpecifier>
                     <operand path="bounds" xsi:type="Property">
                        <source localId="657" locator="248:21-248:33" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="656" locator="248:21-248:26" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </operand>
                  </operand>
                  <asTypeSpecifier localId="660" locator="248:45-248:62" xsi:type="IntervalTypeSpecifier">
                     <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <pointType localId="659" locator="248:54-248:61" resultTypeName="t:DateTime" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                  </asTypeSpecifier>
               </expression>
            </let>
            <let localId="668" locator="249:7-249:82" resultTypeName="t:Decimal" identifier="daysSupply">
               <expression localId="667" locator="249:19-249:82" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                  <source localId="666" locator="249:19-249:76" resultTypeName="t:Quantity" xsi:type="ConvertQuantity">
                     <operand localId="665" locator="249:28-249:67" resultTypeName="t:Quantity" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="expectedSupplyDuration" xsi:type="Property">
                           <source localId="664" locator="249:28-249:44" resultTypeName="fhir:MedicationRequest.DispenseRequest" path="dispenseRequest" scope="R" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand locator="249:72-249:75" resultTypeName="t:String" valueType="t:String" value="d" xsi:type="Literal"/>
                  </source>
               </expression>
            </let>
            <let localId="672" locator="250:7-250:42" resultTypeName="t:Quantity" identifier="quantity">
               <expression localId="671" locator="250:17-250:42" resultTypeName="t:Quantity" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <operand path="quantity" xsi:type="Property">
                     <source localId="670" locator="250:17-250:33" resultTypeName="fhir:MedicationRequest.DispenseRequest" path="dispenseRequest" scope="R" xsi:type="Property"/>
                  </operand>
               </expression>
            </let>
            <let localId="678" locator="251:7-251:68" resultTypeName="t:Integer" identifier="refills">
               <expression localId="677" locator="251:16-251:68" resultTypeName="t:Integer" xsi:type="Coalesce">
                  <operand localId="675" locator="251:25-251:64" resultTypeName="t:Integer" path="value" xsi:type="Property">
                     <source path="numberOfRepeatsAllowed" xsi:type="Property">
                        <source localId="674" locator="251:25-251:41" resultTypeName="fhir:MedicationRequest.DispenseRequest" path="dispenseRequest" scope="R" xsi:type="Property"/>
                     </source>
                  </operand>
                  <operand localId="676" locator="251:67" resultTypeName="t:Integer" valueType="t:Integer" value="0" xsi:type="Literal"/>
               </expression>
            </let>
            <let localId="691" locator="252:7-257:9" resultTypeName="t:Date" identifier="startDate">
               <expression localId="690" locator="253:9-257:9" resultTypeName="t:Date" xsi:type="Coalesce">
                  <operand localId="681" locator="254:11-254:41" resultTypeName="t:Date" xsi:type="DateFrom">
                     <operand localId="680" locator="254:21-254:41" resultTypeName="t:DateTime" xsi:type="Start">
                        <operand localId="679" locator="254:30-254:41" name="boundsPeriod" xsi:type="QueryLetRef">
                           <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                        </operand>
                     </operand>
                  </operand>
                  <operand localId="684" locator="255:11-255:32" resultTypeName="t:Date" xsi:type="DateFrom">
                     <operand localId="683" locator="255:21-255:32" resultTypeName="t:DateTime" path="value" xsi:type="Property">
                        <source path="authoredOn" scope="R" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand localId="689" locator="256:11-256:61" resultTypeName="t:Date" xsi:type="DateFrom">
                     <operand localId="688" locator="256:21-256:61" resultTypeName="t:DateTime" xsi:type="Start">
                        <operand localId="687" locator="256:30-256:61" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <operand path="validityPeriod" xsi:type="Property">
                              <source localId="686" locator="256:30-256:46" resultTypeName="fhir:MedicationRequest.DispenseRequest" path="dispenseRequest" scope="R" xsi:type="Property"/>
                           </operand>
                        </operand>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let localId="705" locator="258:7-258:106" resultTypeName="t:Decimal" identifier="totalDaysSupplied">
               <expression localId="704" locator="258:26-258:106" resultTypeName="t:Decimal" xsi:type="Multiply">
                  <operand localId="700" locator="258:26-258:90" resultTypeName="t:Decimal" xsi:type="Coalesce">
                     <operand localId="692" locator="258:35-258:44" resultTypeName="t:Decimal" name="daysSupply" xsi:type="QueryLetRef"/>
                     <operand localId="699" locator="258:47-258:89" resultTypeName="t:Decimal" xsi:type="Divide">
                        <operand localId="694" locator="258:47-258:60" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="693" locator="258:47-258:54" resultTypeName="t:Quantity" name="quantity" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand localId="698" locator="258:64-258:89" resultTypeName="t:Decimal" xsi:type="Multiply">
                           <operand localId="696" locator="258:65-258:74" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                              <source localId="695" locator="258:65-258:68" resultTypeName="t:Quantity" name="dose" xsi:type="QueryLetRef"/>
                           </operand>
                           <operand localId="697" locator="258:78-258:88" resultTypeName="t:Decimal" name="dosesPerDay" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="703" locator="258:94-258:106" resultTypeName="t:Integer" xsi:type="Add">
                        <operand localId="701" locator="258:95" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
                        <operand localId="702" locator="258:99-258:105" resultTypeName="t:Integer" name="refills" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return localId="734" locator="259:5-265:12">
               <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="733" locator="260:7-265:12" xsi:type="If">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <condition localId="710" locator="260:10-260:64" resultTypeName="t:Boolean" xsi:type="And">
                     <operand localId="707" locator="260:10-260:30" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="260:10-260:30" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="706" locator="260:10-260:18" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand localId="709" locator="260:36-260:64" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="260:36-260:64" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="708" locator="260:36-260:52" resultTypeName="t:Decimal" name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="719" locator="261:9-261:80" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <low localId="711" locator="261:18-261:26" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                     <high localId="718" locator="261:29-261:78" resultTypeName="t:Date" xsi:type="Add">
                        <operand localId="712" locator="261:29-261:37" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        <operand localId="717" locator="261:41-261:78" resultTypeName="t:Quantity" name="Quantity" xsi:type="FunctionRef">
                           <operand localId="715" locator="261:50-261:70" resultTypeName="t:Decimal" xsi:type="Subtract">
                              <operand localId="713" locator="261:50-261:66" resultTypeName="t:Decimal" name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                              <operand xsi:type="ToDecimal">
                                 <operand localId="714" locator="261:70" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand localId="716" locator="261:73-261:77" resultTypeName="t:String" valueType="t:String" value="day" xsi:type="Literal"/>
                        </operand>
                     </high>
                  </then>
                  <else localId="732" locator="262:12-265:12" xsi:type="If">
                     <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <condition localId="725" locator="262:15-262:71" resultTypeName="t:Boolean" xsi:type="And">
                        <operand localId="721" locator="262:15-262:35" resultTypeName="t:Boolean" xsi:type="Not">
                           <operand locator="262:15-262:35" resultTypeName="t:Boolean" xsi:type="IsNull">
                              <operand localId="720" locator="262:15-262:23" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                           </operand>
                        </operand>
                        <operand localId="724" locator="262:41-262:71" resultTypeName="t:Boolean" xsi:type="Not">
                           <operand locator="262:41-262:71" resultTypeName="t:Boolean" xsi:type="IsNull">
                              <operand localId="723" locator="262:41-262:59" resultTypeName="t:DateTime" path="high" xsi:type="Property">
                                 <source localId="722" locator="262:41-262:52" name="boundsPeriod" xsi:type="QueryLetRef">
                                    <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                       <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                                    </resultTypeSpecifier>
                                 </source>
                              </operand>
                           </operand>
                        </operand>
                     </condition>
                     <then localId="730" locator="263:9-263:58" lowClosed="true" highClosed="true" xsi:type="Interval">
                        <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                        <low localId="726" locator="263:18-263:26" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        <high localId="729" locator="263:29-263:57" resultTypeName="t:Date" xsi:type="DateFrom">
                           <operand localId="728" locator="263:39-263:57" resultTypeName="t:DateTime" xsi:type="End">
                              <operand localId="727" locator="263:46-263:57" name="boundsPeriod" xsi:type="QueryLetRef">
                                 <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                    <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                                 </resultTypeSpecifier>
                              </operand>
                           </operand>
                        </high>
                     </then>
                     <else xsi:type="As">
                        <operand localId="731" locator="265:9-265:12" resultTypeName="t:Any" xsi:type="Null"/>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </else>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Request">
            <operandTypeSpecifier localId="595" locator="236:49-236:67" resultTypeName="fhir:MedicationRequest" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="830" locator="336:1-359:12" name="MedicationDispensePeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="830">
               <a:s>/*
Next, consider the MedicationDispense case:
* whenPrepared: When product was prepared
* whenHandedOver: When product was given out
* quantity: Amount dispensed
* daysSupply: Amount of medication expressed as a timing amount
* dosageInstruction.timing.repeat.boundsDuration: total duration of the repeat
* dosageInstruction.timing.repeat.boundsRange: range of durations of the repeat
* dosageInstruction.timing.repeat.boundsPeriod: period bounds of the repeat
* dosageInstruction.timing.repeat.count: number of times to repeat
* dosageInstruction.timing.repeat.countMax: maximum number of times to repeat
* dosageInstruction.timing.repeat.frequency: event occurs frequency times per period
* dosageInstruction.timing.repeat.frequencyMax: event occurs up to frequencyMax times per period
* dosageInstruction.timing.repeat.period: event occurs frequency times per period
* dosageInstruction.timing.repeat.periodMax: upper limit of period
* dosageInstruction.timing.repeat.periodUnit: period duration (s | min | h | d | wk | mo | a)
* dosageInstruction.timing.repeat.timeOfDay: time of day for the event (0..*)
* dosageInstruction.timing.repeat.when: event timing (HS | WAKE | C | CM | CD | CV | AC | ACM...)
* dosageInstruction.timing.code: BID | TID | QID | AM | PM | QD | QOD...
* dosageInstruction.asNeeded
* dosageInstruction.doseAndRate.doseQuantity
* dosageInstruction.doseAndRate.doseRange
We have effectively the same elements, with the same meanings, with the exception that the
event is documenting a single dispense, and does not contain refill information. In addition,
multiple dispense events would typically be present, and those would all have to be considered
as part of an overall calculation. That will be considered when we combine results, but for
this function, we'll focus on calculating the duration of a single dispense.
With a MedicationDispense, dosage information is expected to be the same as the related
MedicationRequest, so boundsPeriod would still cover the entire prescription (including refills)
and so cannot be used to calculate the interval covered by the dispense.
If the daysSupply element is present, then the duration in days is simply
    daysSupply
Note specifically that we are not considering refills, as those would be covered
by subsequent dispense records.
If daysSupplied is not present, then daysSupplied must be calculated based on
the quantity, dosage, and frequency:
    (quantity / (dosage * frequency))
This calculation results in a number of days, which can then be turned into a
period by anchoring that to the startDate, as determined by the first available
value of the start of the boundsPeriod, whenHandedOver, and whenPrepared.
   Interval[startDate, startDate + totalDaysSupplied - 1 day]
*/

/*
Calculates Medication Period for a given MedicationDispense
MedicationDispense instances provided to this function are expected
to conform to the [TODO: MMEMedicationDispense](http://build.fhir.org/ig/cqframework/opioid-mme-r4/StructureDefinition-mmemedicationdispense.html)
profile, which expects:
* 1 and only 1 dosageInstruction, multiple dosageInstruction elements will result in an error
* 1 and only 1 doseAndRate, multiple doseAndRate elements will result in an error
* 1 timing with 1 repeat, missing timing or repeat elements will result in a null
* frequency, frequencyMax, defaulting to 1
* period, periodUnit, defaulting to 1 'd'
* timeOfDay
* doseQuantity or doseRange, missing doseQuantity and doseRange will result in a null
* whenHandedOver or whenPrepared, if missing both whenHandedOver and whenPrepared will result in a null
Note that MedicationDispense status is not considered by this calculation, as the
list of MedicationDispense instances provided to this function should already have
considered appropriate statuses, depending on the use case, typically `completed`,
especially since whenHandedOver would be expected to be present for a completed
MedicationDispense.
Note also that the dosage information recorded in a dispense is expected to be a copy of the
dispense information from the related medication request. As such, the boundsPeriod would be expected
to cover the entire range, and should _not_ be used for timing of the event.
There is also active discussion in the Pharmacy WG about what date should be used if whenPrepared/whenHandedOver is not present.
This may take the form of an &quot;original creation date&quot;, but may also be a &quot;status change date&quot; for dispense events that are updating
status of an existing dispense. That discussion is ongoing, so until that is resolved, this logic will return
null if whenPrepared/whenHandedOver are not available.
*/
define function MedicationDispensePeriod(Dispense </a:s>
               <a:s r="737">
                  <a:s>&quot;MedicationDispense&quot;</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="829">
                  <a:s r="829">
                     <a:s>
                        <a:s r="739">
                           <a:s r="738">
                              <a:s>
                                 <a:s>Dispense</a:s>
                              </a:s>
                           </a:s>
                           <a:s> D</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let
      </a:s>
                        <a:s r="743">
                           <a:s>dosage: </a:s>
                           <a:s r="742">
                              <a:s>singleton from </a:s>
                              <a:s r="741">
                                 <a:s r="740">
                                    <a:s>D</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="741">
                                    <a:s>dosageInstruction</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="747">
                           <a:s>doseAndRate: </a:s>
                           <a:s r="746">
                              <a:s>singleton from </a:s>
                              <a:s r="745">
                                 <a:s r="744">
                                    <a:s>dosage</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="745">
                                    <a:s>doseAndRate</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="750">
                           <a:s>timing: </a:s>
                           <a:s r="749">
                              <a:s r="748">
                                 <a:s>dosage</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="749">
                                 <a:s>timing</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="758">
                           <a:s>frequency: </a:s>
                           <a:s r="757">
                              <a:s>Coalesce(</a:s>
                              <a:s r="753">
                                 <a:s r="752">
                                    <a:s r="751">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="752">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="753">
                                    <a:s>frequencyMax</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="756">
                                 <a:s r="755">
                                    <a:s r="754">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="755">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="756">
                                    <a:s>frequency</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="766">
                           <a:s>period: </a:s>
                           <a:s r="765">
                              <a:s>Quantity(</a:s>
                              <a:s r="761">
                                 <a:s r="760">
                                    <a:s r="759">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="760">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="761">
                                    <a:s>period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="764">
                                 <a:s r="763">
                                    <a:s r="762">
                                       <a:s>timing</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="763">
                                       <a:s>repeat</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="764">
                                    <a:s>periodUnit</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="769">
                           <a:s>doseRange: </a:s>
                           <a:s r="768">
                              <a:s r="767">
                                 <a:s>doseAndRate</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="768">
                                 <a:s>dose</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="772">
                           <a:s>doseQuantity: </a:s>
                           <a:s r="771">
                              <a:s r="770">
                                 <a:s>doseAndRate</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="771">
                                 <a:s>dose</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="777">
                           <a:s>dose: </a:s>
                           <a:s r="776">
                              <a:s>Coalesce(</a:s>
                              <a:s r="774">
                                 <a:s>end of </a:s>
                                 <a:s r="773">
                                    <a:s>doseRange</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="775">
                                 <a:s>doseQuantity</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="782">
                           <a:s>daysSupply: </a:s>
                           <a:s r="781">
                              <a:s r="780">
                                 <a:s>(</a:s>
                                 <a:s r="780">
                                    <a:s>convert </a:s>
                                    <a:s r="779">
                                       <a:s r="778">
                                          <a:s>D</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="779">
                                          <a:s>daysSupply</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> to days</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="781">
                                 <a:s>value</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="792">
                           <a:s>dosesPerDay: </a:s>
                           <a:s r="791">
                              <a:s>Coalesce(</a:s>
                              <a:s r="785">
                                 <a:s>ToDaily(</a:s>
                                 <a:s r="783">
                                    <a:s>frequency</a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="784">
                                    <a:s>period</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="789">
                                 <a:s>Count(</a:s>
                                 <a:s r="788">
                                    <a:s r="787">
                                       <a:s r="786">
                                          <a:s>timing</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="787">
                                          <a:s>repeat</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="788">
                                       <a:s>timeOfDay</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="790">, 1.0)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="800">
                           <a:s>startDate:
        </a:s>
                           <a:s r="799">
                              <a:s>Coalesce(
          </a:s>
                              <a:s r="795">
                                 <a:s>date from </a:s>
                                 <a:s r="794">
                                    <a:s r="793">
                                       <a:s>D</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="794">
                                       <a:s>whenHandedOver</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>,
          </a:s>
                              <a:s r="798">
                                 <a:s>date from </a:s>
                                 <a:s r="797">
                                    <a:s r="796">
                                       <a:s>D</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="797">
                                       <a:s>whenPrepared</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        )</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="811">
                           <a:s>totalDaysSupplied: </a:s>
                           <a:s r="810">
                              <a:s>Coalesce(</a:s>
                              <a:s r="801">
                                 <a:s>daysSupply</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="809">
                                 <a:s r="804">
                                    <a:s r="803">
                                       <a:s r="802">
                                          <a:s>D</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="803">
                                          <a:s>quantity</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="804">
                                       <a:s>value</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> / </a:s>
                                 <a:s r="808">
                                    <a:s>(</a:s>
                                    <a:s r="808">
                                       <a:s r="806">
                                          <a:s r="805">
                                             <a:s>dose</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="806">
                                             <a:s>value</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> * </a:s>
                                       <a:s r="807">
                                          <a:s>dosesPerDay</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="828">
                        <a:s>return
      </a:s>
                        <a:s r="827">
                           <a:s>if </a:s>
                           <a:s r="816">
                              <a:s r="813">
                                 <a:s r="812">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> and </a:s>
                              <a:s r="815">
                                 <a:s r="814">
                                    <a:s>totalDaysSupplied</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                           </a:s>
                           <a:s> then
        </a:s>
                           <a:s r="825">
                              <a:s>Interval[</a:s>
                              <a:s r="817">
                                 <a:s>startDate</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="824">
                                 <a:s r="818">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> + </a:s>
                                 <a:s r="823">
                                    <a:s>Quantity(</a:s>
                                    <a:s r="821">
                                       <a:s r="819">
                                          <a:s>totalDaysSupplied</a:s>
                                       </a:s>
                                       <a:s r="820"> - 1</a:s>
                                    </a:s>
                                    <a:s>, </a:s>
                                    <a:s r="822">
                                       <a:s>'day'</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                           <a:s r="826">
      else
        null</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
         </resultTypeSpecifier>
         <expression localId="829" locator="337:3-359:12" xsi:type="Query">
            <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
            </resultTypeSpecifier>
            <source localId="739" locator="337:3-337:12" resultTypeName="fhir:MedicationDispense" alias="D">
               <expression localId="738" locator="337:3-337:10" resultTypeName="fhir:MedicationDispense" name="Dispense" xsi:type="OperandRef"/>
            </source>
            <let localId="743" locator="339:7-339:48" resultTypeName="fhir:Dosage" identifier="dosage">
               <expression localId="742" locator="339:15-339:48" resultTypeName="fhir:Dosage" xsi:type="SingletonFrom">
                  <operand localId="741" locator="339:30-339:48" path="dosageInstruction" scope="D" xsi:type="Property">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType name="fhir:Dosage" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                  </operand>
               </expression>
            </let>
            <let localId="747" locator="340:7-340:52" resultTypeName="fhir:Dosage.DoseAndRate" identifier="doseAndRate">
               <expression localId="746" locator="340:20-340:52" resultTypeName="fhir:Dosage.DoseAndRate" xsi:type="SingletonFrom">
                  <operand localId="745" locator="340:35-340:52" path="doseAndRate" xsi:type="Property">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType name="fhir:Dosage.DoseAndRate" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <source localId="744" locator="340:35-340:40" resultTypeName="fhir:Dosage" name="dosage" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="750" locator="341:7-341:27" resultTypeName="fhir:Timing" identifier="timing">
               <expression localId="749" locator="341:15-341:27" resultTypeName="fhir:Timing" path="timing" xsi:type="Property">
                  <source localId="748" locator="341:15-341:20" resultTypeName="fhir:Dosage" name="dosage" xsi:type="QueryLetRef"/>
               </expression>
            </let>
            <let localId="758" locator="342:7-342:78" resultTypeName="t:Integer" identifier="frequency">
               <expression localId="757" locator="342:18-342:78" resultTypeName="t:Integer" xsi:type="Coalesce">
                  <operand localId="753" locator="342:27-342:52" resultTypeName="t:Integer" path="value" xsi:type="Property">
                     <source path="frequencyMax" xsi:type="Property">
                        <source localId="752" locator="342:27-342:39" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="751" locator="342:27-342:32" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="756" locator="342:55-342:77" resultTypeName="t:Integer" path="value" xsi:type="Property">
                     <source path="frequency" xsi:type="Property">
                        <source localId="755" locator="342:55-342:67" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="754" locator="342:55-342:60" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let localId="766" locator="343:7-343:70" resultTypeName="t:Quantity" identifier="period">
               <expression localId="765" locator="343:15-343:70" resultTypeName="t:Quantity" name="Quantity" xsi:type="FunctionRef">
                  <operand localId="761" locator="343:24-343:43" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                     <source path="period" xsi:type="Property">
                        <source localId="760" locator="343:24-343:36" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="759" locator="343:24-343:29" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
                  <operand localId="764" locator="343:46-343:69" resultTypeName="fhir:UnitsOfTime" path="value" xsi:type="Property">
                     <source path="periodUnit" xsi:type="Property">
                        <source localId="763" locator="343:46-343:58" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                           <source localId="762" locator="343:46-343:51" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                        </source>
                     </source>
                  </operand>
               </expression>
            </let>
            <let localId="769" locator="344:7-344:33" identifier="doseRange">
               <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                  <choice xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </choice>
                  <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="768" locator="344:18-344:33" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     </choice>
                     <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand path="dose" xsi:type="Property">
                     <source localId="767" locator="344:18-344:28" resultTypeName="fhir:Dosage.DoseAndRate" name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="772" locator="345:7-345:36" identifier="doseQuantity">
               <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                  <choice xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </choice>
                  <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="771" locator="345:21-345:36" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                     </choice>
                     <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand path="dose" xsi:type="Property">
                     <source localId="770" locator="345:21-345:31" resultTypeName="fhir:Dosage.DoseAndRate" name="doseAndRate" xsi:type="QueryLetRef"/>
                  </operand>
               </expression>
            </let>
            <let localId="777" locator="346:7-346:52" resultTypeName="t:Quantity" identifier="dose">
               <expression localId="776" locator="346:13-346:52" resultTypeName="t:Quantity" xsi:type="Coalesce">
                  <operand localId="774" locator="346:22-346:37" resultTypeName="t:Quantity" xsi:type="End">
                     <operand xsi:type="As">
                        <operand localId="773" locator="346:29-346:37" name="doseRange" xsi:type="QueryLetRef">
                           <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                              <choice xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                              </choice>
                              <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                        </operand>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
                  <operand asType="t:Quantity" xsi:type="As">
                     <operand localId="775" locator="346:40-346:51" name="doseQuantity" xsi:type="QueryLetRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                           </choice>
                           <choice name="t:Quantity" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let localId="782" locator="347:7-347:54" resultTypeName="t:Decimal" identifier="daysSupply">
               <expression localId="781" locator="347:19-347:54" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                  <source localId="780" locator="347:19-347:48" resultTypeName="t:Quantity" xsi:type="ConvertQuantity">
                     <operand localId="779" locator="347:28-347:39" resultTypeName="t:Quantity" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand path="daysSupply" scope="D" xsi:type="Property"/>
                     </operand>
                     <operand locator="347:44-347:47" resultTypeName="t:String" valueType="t:String" value="d" xsi:type="Literal"/>
                  </source>
               </expression>
            </let>
            <let localId="792" locator="348:7-348:92" resultTypeName="t:Decimal" identifier="dosesPerDay">
               <expression localId="791" locator="348:20-348:92" resultTypeName="t:Decimal" xsi:type="Coalesce">
                  <operand localId="785" locator="348:29-348:54" resultTypeName="t:Decimal" name="ToDaily" xsi:type="FunctionRef">
                     <operand localId="783" locator="348:37-348:45" resultTypeName="t:Integer" name="frequency" xsi:type="QueryLetRef"/>
                     <operand localId="784" locator="348:48-348:53" resultTypeName="t:Quantity" name="period" xsi:type="QueryLetRef"/>
                  </operand>
                  <operand xsi:type="ToDecimal">
                     <operand localId="789" locator="348:57-348:86" resultTypeName="t:Integer" xsi:type="Count">
                        <source localId="788" locator="348:63-348:85" path="value" xsi:type="Property">
                           <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                              <elementType name="t:Time" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <source path="timeOfDay" xsi:type="Property">
                              <source localId="787" locator="348:63-348:75" resultTypeName="fhir:Timing.Repeat" path="repeat" xsi:type="Property">
                                 <source localId="786" locator="348:63-348:68" resultTypeName="fhir:Timing" name="timing" xsi:type="QueryLetRef"/>
                              </source>
                           </source>
                        </source>
                     </operand>
                  </operand>
                  <operand localId="790" locator="348:89-348:91" resultTypeName="t:Decimal" valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               </expression>
            </let>
            <let localId="800" locator="349:7-353:9" resultTypeName="t:Date" identifier="startDate">
               <expression localId="799" locator="350:9-353:9" resultTypeName="t:Date" xsi:type="Coalesce">
                  <operand localId="795" locator="351:11-351:36" resultTypeName="t:Date" xsi:type="DateFrom">
                     <operand localId="794" locator="351:21-351:36" resultTypeName="t:DateTime" path="value" xsi:type="Property">
                        <source path="whenHandedOver" scope="D" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand localId="798" locator="352:11-352:34" resultTypeName="t:Date" xsi:type="DateFrom">
                     <operand localId="797" locator="352:21-352:34" resultTypeName="t:DateTime" path="value" xsi:type="Property">
                        <source path="whenPrepared" scope="D" xsi:type="Property"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let localId="811" locator="354:7-354:92" resultTypeName="t:Decimal" identifier="totalDaysSupplied">
               <expression localId="810" locator="354:26-354:92" resultTypeName="t:Decimal" xsi:type="Coalesce">
                  <operand localId="801" locator="354:35-354:44" resultTypeName="t:Decimal" name="daysSupply" xsi:type="QueryLetRef"/>
                  <operand localId="809" locator="354:47-354:91" resultTypeName="t:Decimal" xsi:type="Divide">
                     <operand localId="804" locator="354:47-354:62" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                        <source localId="803" locator="354:47-354:56" resultTypeName="t:Quantity" name="ToQuantity" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand path="quantity" scope="D" xsi:type="Property"/>
                        </source>
                     </operand>
                     <operand localId="808" locator="354:66-354:91" resultTypeName="t:Decimal" xsi:type="Multiply">
                        <operand localId="806" locator="354:67-354:76" resultTypeName="t:Decimal" path="value" xsi:type="Property">
                           <source localId="805" locator="354:67-354:70" resultTypeName="t:Quantity" name="dose" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand localId="807" locator="354:80-354:90" resultTypeName="t:Decimal" name="dosesPerDay" xsi:type="QueryLetRef"/>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return localId="828" locator="355:5-359:12">
               <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="827" locator="356:7-359:12" xsi:type="If">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <condition localId="816" locator="356:10-356:64" resultTypeName="t:Boolean" xsi:type="And">
                     <operand localId="813" locator="356:10-356:30" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="356:10-356:30" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="812" locator="356:10-356:18" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand localId="815" locator="356:36-356:64" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="356:36-356:64" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="814" locator="356:36-356:52" resultTypeName="t:Decimal" name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="825" locator="357:9-357:79" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <low localId="817" locator="357:18-357:26" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                     <high localId="824" locator="357:29-357:78" resultTypeName="t:Date" xsi:type="Add">
                        <operand localId="818" locator="357:29-357:37" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        <operand localId="823" locator="357:41-357:78" resultTypeName="t:Quantity" name="Quantity" xsi:type="FunctionRef">
                           <operand localId="821" locator="357:50-357:70" resultTypeName="t:Decimal" xsi:type="Subtract">
                              <operand localId="819" locator="357:50-357:66" resultTypeName="t:Decimal" name="totalDaysSupplied" xsi:type="QueryLetRef"/>
                              <operand xsi:type="ToDecimal">
                                 <operand localId="820" locator="357:70" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand localId="822" locator="357:73-357:77" resultTypeName="t:String" valueType="t:String" value="day" xsi:type="Literal"/>
                        </operand>
                     </high>
                  </then>
                  <else xsi:type="As">
                     <operand localId="826" locator="359:9-359:12" resultTypeName="t:Any" xsi:type="Null"/>
                     <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </asTypeSpecifier>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Dispense">
            <operandTypeSpecifier localId="737" locator="336:51-336:70" resultTypeName="fhir:MedicationDispense" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="833" locator="367:1-368:9" resultTypeName="t:Quantity" name="TherapeuticDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="833">
               <a:s>/*
Returns the established therapeutic duration for a given medication.
This is likely measure specific, though could potentially be established for
any drug and distributed as a CodeSystem supplement.
Defaulting to 14 days here for illustration.
*/
define function TherapeuticDuration(medication </a:s>
               <a:s r="831">
                  <a:s>Concept</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="832">
                  <a:s r="832">
                     <a:s>14 days</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="832" locator="368:3-368:9" resultTypeName="t:Quantity" value="14" unit="days" xsi:type="Quantity"/>
         <operand name="medication">
            <operandTypeSpecifier localId="831" locator="367:48-367:54" resultTypeName="t:Concept" name="t:Concept" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="862" locator="387:1-396:12" name="MedicationAdministrationPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="862">
               <a:s>/*
Next we consider MedicationAdministration. This data type is typically used to
capture specific administration, with the relevantPeriod capturing start and stop
time of the administration event:
* effective[x]: Start and end time of administration
However, when calculating cumulative medication duration, it is typically the
therapeutic period of the medication that should be considered. Currently neither
the Medication nor MedicationKnowledge resources provide this information, so
we model it here as a function that can potentially be implemented in a variety
of ways, including measure-specific values, as well as distribution as an RxNorm
code system supplement.
However it is obtained, if therapeutic duration can be obtained, and the effective
period has a start, the result will be
    Interval[startDate, startDate + therapeuticDuration - 1 day]
NOTE: Therapeutic duration needs to be established and until a way is implemented to
do that based on the medication, this logic is incomplete and should not be used.
*/
define function MedicationAdministrationPeriod(Administration </a:s>
               <a:s r="834">
                  <a:s>&quot;MedicationAdministration&quot;</a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="861">
                  <a:s r="861">
                     <a:s>
                        <a:s r="836">
                           <a:s r="835">
                              <a:s>
                                 <a:s>Administration</a:s>
                              </a:s>
                           </a:s>
                           <a:s> M</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s>
                        <a:s>let
      </a:s>
                        <a:s r="840">
                           <a:s>therapeuticDuration: </a:s>
                           <a:s r="839">
                              <a:s>TherapeuticDuration(</a:s>
                              <a:s r="838">
                                 <a:s r="837">
                                    <a:s>Administration</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="838">
                                    <a:s>medication</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="845">
                           <a:s>startDate: </a:s>
                           <a:s r="844">
                              <a:s>date from </a:s>
                              <a:s r="843">
                                 <a:s>start of </a:s>
                                 <a:s r="842">
                                    <a:s r="841">
                                       <a:s>Administration</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="842">
                                       <a:s>effective</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="860">
                        <a:s>return
      </a:s>
                        <a:s r="859">
                           <a:s>if </a:s>
                           <a:s r="850">
                              <a:s r="847">
                                 <a:s r="846">
                                    <a:s>startDate</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                              <a:s> and </a:s>
                              <a:s r="849">
                                 <a:s r="848">
                                    <a:s>therapeuticDuration</a:s>
                                 </a:s>
                                 <a:s> is not null</a:s>
                              </a:s>
                           </a:s>
                           <a:s> then
        </a:s>
                           <a:s r="857">
                              <a:s>Interval[</a:s>
                              <a:s r="851">
                                 <a:s>startDate</a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="856">
                                 <a:s r="854">
                                    <a:s r="852">
                                       <a:s>startDate</a:s>
                                    </a:s>
                                    <a:s> + </a:s>
                                    <a:s r="853">
                                       <a:s>therapeuticDuration</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s r="855"> - 1</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                           <a:s r="858">
      else
        null</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
         </resultTypeSpecifier>
         <expression localId="861" locator="388:3-396:12" xsi:type="Query">
            <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
            </resultTypeSpecifier>
            <source localId="836" locator="388:3-388:18" resultTypeName="fhir:MedicationAdministration" alias="M">
               <expression localId="835" locator="388:3-388:16" resultTypeName="fhir:MedicationAdministration" name="Administration" xsi:type="OperandRef"/>
            </source>
            <let localId="840" locator="390:7-390:73" resultTypeName="t:Quantity" identifier="therapeuticDuration">
               <expression localId="839" locator="390:28-390:73" resultTypeName="t:Quantity" name="TherapeuticDuration" xsi:type="FunctionRef">
                  <operand asType="t:Concept" xsi:type="As">
                     <operand localId="838" locator="390:48-390:72" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice name="t:Concept" xsi:type="NamedTypeSpecifier"/>
                           <choice name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                        <operand path="medication" xsi:type="Property">
                           <source localId="837" locator="390:48-390:61" resultTypeName="fhir:MedicationAdministration" name="Administration" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
               </expression>
            </let>
            <let localId="845" locator="391:7-391:60" resultTypeName="t:Date" identifier="startDate">
               <expression localId="844" locator="391:18-391:60" resultTypeName="t:Date" xsi:type="DateFrom">
                  <operand localId="843" locator="391:28-391:60" resultTypeName="t:DateTime" xsi:type="Start">
                     <operand xsi:type="As">
                        <operand localId="842" locator="391:37-391:60" name="ToValue" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                              <choice name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                              <choice xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                              </choice>
                           </resultTypeSpecifier>
                           <operand path="effective" xsi:type="Property">
                              <source localId="841" locator="391:37-391:50" resultTypeName="fhir:MedicationAdministration" name="Administration" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </operand>
                  </operand>
               </expression>
            </let>
            <return localId="860" locator="392:5-396:12">
               <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <expression localId="859" locator="393:7-396:12" xsi:type="If">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <condition localId="850" locator="393:10-393:66" resultTypeName="t:Boolean" xsi:type="And">
                     <operand localId="847" locator="393:10-393:30" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="393:10-393:30" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="846" locator="393:10-393:18" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                     <operand localId="849" locator="393:36-393:66" resultTypeName="t:Boolean" xsi:type="Not">
                        <operand locator="393:36-393:66" resultTypeName="t:Boolean" xsi:type="IsNull">
                           <operand localId="848" locator="393:36-393:54" resultTypeName="t:Quantity" name="therapeuticDuration" xsi:type="QueryLetRef"/>
                        </operand>
                     </operand>
                  </condition>
                  <then localId="857" locator="394:9-394:64" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <low localId="851" locator="394:18-394:26" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                     <high localId="856" locator="394:29-394:63" resultTypeName="t:Date" xsi:type="Subtract">
                        <operand localId="854" locator="394:29-394:59" resultTypeName="t:Date" xsi:type="Add">
                           <operand localId="852" locator="394:29-394:37" resultTypeName="t:Date" name="startDate" xsi:type="QueryLetRef"/>
                           <operand localId="853" locator="394:41-394:59" resultTypeName="t:Quantity" name="therapeuticDuration" xsi:type="QueryLetRef"/>
                        </operand>
                        <operand xsi:type="ToQuantity">
                           <operand localId="855" locator="394:63" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
                        </operand>
                     </high>
                  </then>
                  <else xsi:type="As">
                     <operand localId="858" locator="396:9-396:12" resultTypeName="t:Any" xsi:type="Null"/>
                     <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </asTypeSpecifier>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="Administration">
            <operandTypeSpecifier localId="834" locator="387:63-387:88" resultTypeName="fhir:MedicationAdministration" name="fhir:MedicationAdministration" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="883" locator="408:1-415:13" resultTypeName="t:Integer" name="CumulativeDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="883">
               <a:s>/*
Now that we have functions for determining the medication period for individual
prescriptions, administrations, and dispenses, we can combine those using
an overall cumulative medication duration calculation.
There are two broad approaches to calculating cumulative duration, one that _collapses_
overlapping intervals so that calculations are not duplicated, and one that _rolls out_
overlapping intervals so that the durations are laid end-to-end.
First, we define a function that simply calculates CumulativeDuration of a set of
intervals:
*/
define function CumulativeDuration(Intervals </a:s>
               <a:s r="865">
                  <a:s>List&lt;</a:s>
                  <a:s r="864">
                     <a:s>Interval&lt;</a:s>
                     <a:s r="863">
                        <a:s>Date</a:s>
                     </a:s>
                     <a:s>></a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):
   </a:s>
               <a:s r="882">
                  <a:s r="882">
                     <a:s>if </a:s>
                     <a:s r="867">
                        <a:s r="866">
                           <a:s>Intervals</a:s>
                        </a:s>
                        <a:s> is not null</a:s>
                     </a:s>
                     <a:s> then </a:s>
                     <a:s r="880">
                        <a:s>( </a:s>
                        <a:s r="880">
                           <a:s>Sum(</a:s>
                           <a:s r="879">
                              <a:s>
                                 <a:s r="870">
                                    <a:s r="869">
                                       <a:s>(</a:s>
                                       <a:s r="869">
                                          <a:s>collapse </a:s>
                                          <a:s r="868">
                                             <a:s>Intervals</a:s>
                                          </a:s>
                                          <a:s> per day</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                    <a:s>X</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        </a:s>
                              <a:s r="878">
                                 <a:s>return all</a:s>
                                 <a:s r="877">
                                    <a:s r="875">
                                       <a:s>(</a:s>
                                       <a:s r="875">
                                          <a:s>difference in days between </a:s>
                                          <a:s r="872">
                                             <a:s>start of </a:s>
                                             <a:s r="871">
                                                <a:s>X</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> and 
          </a:s>
                                          <a:s r="874">
                                             <a:s>end of </a:s>
                                             <a:s r="873">
                                                <a:s>X</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>
        )</a:s>
                                    </a:s>
                                    <a:s r="876">+ 1</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
    )</a:s>
                        </a:s>
                        <a:s>
  )</a:s>
                     </a:s>
                     <a:s r="881"> 
    else null</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="882" locator="409:4-415:13" resultTypeName="t:Integer" xsi:type="If">
            <condition localId="867" locator="409:7-409:27" resultTypeName="t:Boolean" xsi:type="Not">
               <operand locator="409:7-409:27" resultTypeName="t:Boolean" xsi:type="IsNull">
                  <operand localId="866" locator="409:7-409:15" name="Intervals" xsi:type="OperandRef">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                  </operand>
               </operand>
            </condition>
            <then localId="880" locator="409:34-414:3" resultTypeName="t:Integer" xsi:type="Sum">
               <source localId="879" locator="409:40-412:12" xsi:type="Query">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <source localId="870" locator="409:40-409:68" alias="X">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <expression localId="869" locator="409:40-409:67" xsi:type="Collapse">
                        <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                           <elementType xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           </elementType>
                        </resultTypeSpecifier>
                        <operand localId="868" locator="409:50-409:58" name="Intervals" xsi:type="OperandRef">
                           <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                              <elementType xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </resultTypeSpecifier>
                        </operand>
                        <operand value="1.0" unit="day" xsi:type="Quantity"/>
                     </expression>
                  </source>
                  <return localId="878" locator="410:9-412:12" distinct="false">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType name="t:Integer" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                     <expression localId="877" locator="410:19-412:12" resultTypeName="t:Integer" xsi:type="Add">
                        <operand localId="875" locator="410:19-412:9" resultTypeName="t:Integer" precision="Day" xsi:type="DifferenceBetween">
                           <operand localId="872" locator="410:47-410:56" resultTypeName="t:Date" xsi:type="Start">
                              <operand localId="871" locator="410:56" name="X" xsi:type="AliasRef">
                                 <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                    <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                 </resultTypeSpecifier>
                              </operand>
                           </operand>
                           <operand localId="874" locator="411:11-411:18" resultTypeName="t:Date" xsi:type="End">
                              <operand localId="873" locator="411:18" name="X" xsi:type="AliasRef">
                                 <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                    <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                 </resultTypeSpecifier>
                              </operand>
                           </operand>
                        </operand>
                        <operand localId="876" locator="412:12" resultTypeName="t:Integer" valueType="t:Integer" value="1" xsi:type="Literal"/>
                     </expression>
                  </return>
               </source>
            </then>
            <else asType="t:Integer" xsi:type="As">
               <operand localId="881" locator="415:10-415:13" resultTypeName="t:Any" xsi:type="Null"/>
            </else>
         </expression>
         <operand name="Intervals">
            <operandTypeSpecifier localId="865" locator="408:46-408:65" xsi:type="ListTypeSpecifier">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <elementType localId="864" locator="408:51-408:64" xsi:type="IntervalTypeSpecifier">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <pointType localId="863" locator="408:60-408:63" resultTypeName="t:Date" name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="925" locator="420:1-428:5" name="RolloutIntervals" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="925">
               <a:s>/*
Next, we define a function that rolls out intervals:
*/
define function RolloutIntervals(intervals </a:s>
               <a:s r="886">
                  <a:s>List&lt;</a:s>
                  <a:s r="885">
                     <a:s>Interval&lt;</a:s>
                     <a:s r="884">
                        <a:s>Date</a:s>
                     </a:s>
                     <a:s>></a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):
 </a:s>
               <a:s r="924">
                  <a:s r="924">
                     <a:s>
                        <a:s r="888">
                           <a:s r="887">
                              <a:s>
                                 <a:s>intervals</a:s>
                              </a:s>
                           </a:s>
                           <a:s> I</a:s>
                        </a:s>
                     </a:s>
                     <a:s> </a:s>
                     <a:s r="923">
                        <a:s>aggregate all R </a:s>
                        <a:s r="893">
                           <a:s>starting ( </a:s>
                           <a:s r="893">
                              <a:s r="889">null as </a:s>
                              <a:s r="892">
                                 <a:s>List&lt;</a:s>
                                 <a:s r="891">
                                    <a:s>Interval&lt;</a:s>
                                    <a:s r="890">
                                       <a:s>Date</a:s>
                                    </a:s>
                                    <a:s>></a:s>
                                 </a:s>
                                 <a:s>></a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                        <a:s>: </a:s>
                        <a:s r="922">
                           <a:s r="894">
                              <a:s>R</a:s>
                           </a:s>
                           <a:s>
    union </a:s>
                           <a:s r="921">
                              <a:s>( </a:s>
                              <a:s r="921">
                                 <a:s>{ </a:s>
                                 <a:s r="920">
                                    <a:s>
                                       <a:s r="896">
                                          <a:s r="895">
                                             <a:s>
                                                <a:s>I</a:s>
                                             </a:s>
                                          </a:s>
                                          <a:s> X</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>
        </a:s>
                                    <a:s>
                                       <a:s>let </a:s>
                                       <a:s r="906">
                                          <a:s>S: </a:s>
                                          <a:s r="905">
                                             <a:s>Max(</a:s>
                                             <a:s r="904">
                                                <a:s>{ 
          </a:s>
                                                <a:s r="901">
                                                   <a:s r="899">
                                                      <a:s>end of </a:s>
                                                      <a:s r="898">
                                                         <a:s>Last(</a:s>
                                                         <a:s r="897">
                                                            <a:s>R</a:s>
                                                         </a:s>
                                                         <a:s>)</a:s>
                                                      </a:s>
                                                   </a:s>
                                                   <a:s>+ </a:s>
                                                   <a:s r="900">
                                                      <a:s>1 day</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s>, </a:s>
                                                <a:s r="903">
                                                   <a:s>start of </a:s>
                                                   <a:s r="902">
                                                      <a:s>X</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> }</a:s>
                                             </a:s>
                                             <a:s>
        )</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>,
        </a:s>
                                       <a:s r="915">
                                          <a:s>E: </a:s>
                                          <a:s r="914">
                                             <a:s r="907">
                                                <a:s>S</a:s>
                                             </a:s>
                                             <a:s> + </a:s>
                                             <a:s r="913">
                                                <a:s>Quantity(</a:s>
                                                <a:s r="911">
                                                   <a:s>Coalesce(</a:s>
                                                   <a:s r="909">
                                                      <a:s>duration in days of </a:s>
                                                      <a:s r="908">
                                                         <a:s>X</a:s>
                                                      </a:s>
                                                   </a:s>
                                                   <a:s r="910">, 0)</a:s>
                                                </a:s>
                                                <a:s>, </a:s>
                                                <a:s r="912">
                                                   <a:s>'day'</a:s>
                                                </a:s>
                                                <a:s>)</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>
        </a:s>
                                    <a:s r="919">
                                       <a:s>return </a:s>
                                       <a:s r="918">
                                          <a:s>Interval[</a:s>
                                          <a:s r="916">
                                             <a:s>S</a:s>
                                          </a:s>
                                          <a:s>, </a:s>
                                          <a:s r="917">
                                             <a:s>E</a:s>
                                          </a:s>
                                          <a:s>]</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>}</a:s>
                              </a:s>
                              <a:s>
    )</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <resultTypeSpecifier xsi:type="ListTypeSpecifier">
            <elementType xsi:type="IntervalTypeSpecifier">
               <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
            </elementType>
         </resultTypeSpecifier>
         <expression localId="924" locator="421:2-428:5" xsi:type="Query">
            <resultTypeSpecifier xsi:type="ListTypeSpecifier">
               <elementType xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </resultTypeSpecifier>
            <source localId="888" locator="421:2-421:12" alias="I">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <expression localId="887" locator="421:2-421:10" name="intervals" xsi:type="OperandRef">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </resultTypeSpecifier>
               </expression>
            </source>
            <aggregate localId="923" locator="421:14-428:5" identifier="R" distinct="false">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <expression localId="922" locator="421:72-428:5" xsi:type="Union">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </resultTypeSpecifier>
                  <operand localId="894" locator="421:72" name="R" xsi:type="QueryLetRef">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                  </operand>
                  <operand localId="921" locator="422:11-428:5" xsi:type="List">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <element localId="920" locator="422:15-427:29" xsi:type="Query">
                        <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                        <source localId="896" locator="422:15-422:17" alias="X">
                           <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <expression localId="895" locator="422:15" name="I" xsi:type="AliasRef">
                              <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              </resultTypeSpecifier>
                           </expression>
                        </source>
                        <let localId="906" locator="423:13-425:9" resultTypeName="t:Date" identifier="S">
                           <expression localId="905" locator="423:16-425:9" resultTypeName="t:Date" xsi:type="Max">
                              <source localId="904" locator="423:20-424:45" xsi:type="List">
                                 <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                                    <elementType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                 </resultTypeSpecifier>
                                 <element localId="901" locator="424:11-424:31" resultTypeName="t:Date" xsi:type="Add">
                                    <operand localId="899" locator="424:11-424:24" resultTypeName="t:Date" xsi:type="End">
                                       <operand localId="898" locator="424:18-424:24" xsi:type="Last">
                                          <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                             <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                          </resultTypeSpecifier>
                                          <source localId="897" locator="424:23" name="R" xsi:type="QueryLetRef">
                                             <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                                                <elementType xsi:type="IntervalTypeSpecifier">
                                                   <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                                </elementType>
                                             </resultTypeSpecifier>
                                          </source>
                                       </operand>
                                    </operand>
                                    <operand localId="900" locator="424:27-424:31" resultTypeName="t:Quantity" value="1" unit="day" xsi:type="Quantity"/>
                                 </element>
                                 <element localId="903" locator="424:34-424:43" resultTypeName="t:Date" xsi:type="Start">
                                    <operand localId="902" locator="424:43" name="X" xsi:type="AliasRef">
                                       <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                          <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                       </resultTypeSpecifier>
                                    </operand>
                                 </element>
                              </source>
                           </expression>
                        </let>
                        <let localId="915" locator="426:9-426:66" resultTypeName="t:Date" identifier="E">
                           <expression localId="914" locator="426:12-426:66" resultTypeName="t:Date" xsi:type="Add">
                              <operand localId="907" locator="426:12" resultTypeName="t:Date" name="S" xsi:type="QueryLetRef"/>
                              <operand localId="913" locator="426:16-426:66" resultTypeName="t:Quantity" name="Quantity" xsi:type="FunctionRef">
                                 <operand xsi:type="ToDecimal">
                                    <operand localId="911" locator="426:25-426:58" resultTypeName="t:Integer" xsi:type="Coalesce">
                                       <operand localId="909" locator="426:34-426:54" resultTypeName="t:Integer" precision="Day" xsi:type="DurationBetween">
                                          <operand xsi:type="Start">
                                             <operand localId="908" locator="426:54" name="X" xsi:type="AliasRef">
                                                <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                                   <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                                </resultTypeSpecifier>
                                             </operand>
                                          </operand>
                                          <operand xsi:type="End">
                                             <operand localId="908" locator="426:54" name="X" xsi:type="AliasRef">
                                                <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                                   <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                                                </resultTypeSpecifier>
                                             </operand>
                                          </operand>
                                       </operand>
                                       <operand localId="910" locator="426:57" resultTypeName="t:Integer" valueType="t:Integer" value="0" xsi:type="Literal"/>
                                    </operand>
                                 </operand>
                                 <operand localId="912" locator="426:61-426:65" resultTypeName="t:String" valueType="t:String" value="day" xsi:type="Literal"/>
                              </operand>
                           </expression>
                        </let>
                        <return localId="919" locator="427:9-427:29">
                           <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <expression localId="918" locator="427:16-427:29" lowClosed="true" highClosed="true" xsi:type="Interval">
                              <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                                 <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                              </resultTypeSpecifier>
                              <low localId="916" locator="427:25" resultTypeName="t:Date" name="S" xsi:type="QueryLetRef"/>
                              <high localId="917" locator="427:28" resultTypeName="t:Date" name="E" xsi:type="QueryLetRef"/>
                           </expression>
                        </return>
                     </element>
                  </operand>
               </expression>
               <starting localId="893" locator="421:30-421:69" strict="false" xsi:type="As">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </resultTypeSpecifier>
                  <operand localId="889" locator="421:41-421:44" resultTypeName="t:Any" xsi:type="Null"/>
                  <asTypeSpecifier localId="892" locator="421:49-421:68" xsi:type="ListTypeSpecifier">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <elementType localId="891" locator="421:54-421:67" xsi:type="IntervalTypeSpecifier">
                        <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                        <pointType localId="890" locator="421:63-421:66" resultTypeName="t:Date" name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </asTypeSpecifier>
               </starting>
            </aggregate>
         </expression>
         <operand name="intervals">
            <operandTypeSpecifier localId="886" locator="420:44-420:63" xsi:type="ListTypeSpecifier">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <elementType localId="885" locator="420:49-420:62" xsi:type="IntervalTypeSpecifier">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <pointType localId="884" locator="420:58-420:61" resultTypeName="t:Date" name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="943" locator="435:1-443:5" name="MedicationPeriod" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="943">
               <a:s>/*
Then, we define a function that allows us to calculate based on the various medication
types:
*/
define function MedicationPeriod(
  medication </a:s>
               <a:s r="928">
                  <a:s>Choice&lt;</a:s>
                  <a:s r="926">
                     <a:s>&quot;MedicationRequest&quot;</a:s>
                  </a:s>
                  <a:s>,
    </a:s>
                  <a:s r="927">
                     <a:s>&quot;MedicationDispense&quot;</a:s>
                  </a:s>
                  <a:s>
  ></a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="942">
                  <a:s r="942">
                     <a:s>case
    </a:s>
                     <a:s r="934">
                        <a:s>when </a:s>
                        <a:s r="931">
                           <a:s r="929">
                              <a:s>medication</a:s>
                           </a:s>
                           <a:s> is </a:s>
                           <a:s r="930">
                              <a:s>MedicationRequest</a:s>
                           </a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="933">
                           <a:s>MedicationRequestPeriod(</a:s>
                           <a:s r="932">
                              <a:s>medication</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    </a:s>
                     <a:s r="940">
                        <a:s>when </a:s>
                        <a:s r="937">
                           <a:s r="935">
                              <a:s>medication</a:s>
                           </a:s>
                           <a:s> is </a:s>
                           <a:s r="936">
                              <a:s>MedicationDispense</a:s>
                           </a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="939">
                           <a:s>MedicationDispensePeriod(</a:s>
                           <a:s r="938">
                              <a:s>medication</a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                     <a:s r="941">
    else null
  end</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
         </resultTypeSpecifier>
         <expression localId="942" locator="439:3-443:5" xsi:type="Case">
            <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
            </resultTypeSpecifier>
            <caseItem localId="934" locator="440:5-440:81">
               <when localId="931" locator="440:10-440:40" resultTypeName="t:Boolean" xsi:type="Is">
                  <operand localId="929" locator="440:10-440:19" name="medication" xsi:type="OperandRef">
                     <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                        <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                        <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                  </operand>
                  <isTypeSpecifier localId="930" locator="440:24-440:40" resultTypeName="fhir:MedicationRequest" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
               </when>
               <then localId="933" locator="440:47-440:81" name="MedicationRequestPeriod" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand asType="fhir:MedicationRequest" xsi:type="As">
                     <operand localId="932" locator="440:71-440:80" name="medication" xsi:type="OperandRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                           <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem localId="940" locator="441:5-441:83">
               <when localId="937" locator="441:10-441:41" resultTypeName="t:Boolean" xsi:type="Is">
                  <operand localId="935" locator="441:10-441:19" name="medication" xsi:type="OperandRef">
                     <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                        <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                        <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                     </resultTypeSpecifier>
                  </operand>
                  <isTypeSpecifier localId="936" locator="441:24-441:41" resultTypeName="fhir:MedicationDispense" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
               </when>
               <then localId="939" locator="441:48-441:83" name="MedicationDispensePeriod" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <operand asType="fhir:MedicationDispense" xsi:type="As">
                     <operand localId="938" locator="441:73-441:82" name="medication" xsi:type="OperandRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                           <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <else xsi:type="As">
               <operand localId="941" locator="442:10-442:13" resultTypeName="t:Any" xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </else>
         </expression>
         <operand name="medication">
            <operandTypeSpecifier localId="928" locator="436:14-438:3" xsi:type="ChoiceTypeSpecifier">
               <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                  <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                  <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
               </resultTypeSpecifier>
               <choice localId="926" locator="436:21-436:39" resultTypeName="fhir:MedicationRequest" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
               <choice localId="927" locator="437:5-437:24" resultTypeName="fhir:MedicationDispense" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="969" locator="456:1-472:3" resultTypeName="t:Integer" name="CumulativeMedicationDuration" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="969">
               <a:s>/*
We can then use this function, combined with the MedicationDuration functions above
to calculate Cumulative Medication Duration:
Generally speaking, we want to _roll out_ intervals from dispense and administration
events, and then collapse across that result and intervals from prescriptions.
Note also that the separation of medications by type should already be done
by this stage as well.
Calculations that combine dosages from different types of medications (such as Morphine Milligram Equivalent (MME)
or Average MME) require further consideration.
*/
define function CumulativeMedicationDuration(
  Medications </a:s>
               <a:s r="947">
                  <a:s>List&lt;</a:s>
                  <a:s r="946">
                     <a:s>Choice&lt;</a:s>
                     <a:s r="944">
                        <a:s>&quot;MedicationRequest&quot;</a:s>
                     </a:s>
                     <a:s>,
    </a:s>
                     <a:s r="945">
                        <a:s>&quot;MedicationDispense&quot;</a:s>
                     </a:s>
                     <a:s>
  ></a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):
  </a:s>
               <a:s r="968">
                  <a:s r="968">
                     <a:s>CumulativeDuration(</a:s>
                     <a:s r="967">
                        <a:s r="956">
                           <a:s>(
      </a:s>
                           <a:s r="956">
                              <a:s>
                                 <a:s r="949">
                                    <a:s r="948">
                                       <a:s>
                                          <a:s>Medications</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> M</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        </a:s>
                              <a:s r="952">
                                 <a:s>where </a:s>
                                 <a:s r="952">
                                    <a:s r="950">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s> is </a:s>
                                    <a:s r="951">
                                       <a:s>MedicationRequest</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        </a:s>
                              <a:s r="955">
                                 <a:s>return </a:s>
                                 <a:s r="954">
                                    <a:s>MedicationRequestPeriod(</a:s>
                                    <a:s r="953">
                                       <a:s>M</a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                           <a:s>
    )</a:s>
                        </a:s>
                        <a:s>
      union </a:s>
                        <a:s r="966">
                           <a:s>(
        </a:s>
                           <a:s r="966">
                              <a:s>RolloutIntervals(
          </a:s>
                              <a:s r="965">
                                 <a:s>
                                    <a:s r="958">
                                       <a:s r="957">
                                          <a:s>
                                             <a:s>Medications</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> M</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>
            </a:s>
                                 <a:s r="961">
                                    <a:s>where </a:s>
                                    <a:s r="961">
                                       <a:s r="959">
                                          <a:s>M</a:s>
                                       </a:s>
                                       <a:s> is </a:s>
                                       <a:s r="960">
                                          <a:s>MedicationDispense</a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>
            </a:s>
                                 <a:s r="964">
                                    <a:s>return </a:s>
                                    <a:s r="963">
                                       <a:s>MedicationDispensePeriod(</a:s>
                                       <a:s r="962">
                                          <a:s>M</a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>
        )</a:s>
                           </a:s>
                           <a:s>
      )</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
  )</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="968" locator="460:3-472:3" resultTypeName="t:Integer" name="CumulativeDuration" xsi:type="FunctionRef">
            <operand localId="967" locator="460:22-471:7" xsi:type="Union">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="IntervalTypeSpecifier">
                     <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <operand localId="956" locator="460:22-464:5" xsi:type="Query">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </resultTypeSpecifier>
                  <source localId="949" locator="461:7-461:19" alias="M">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="ChoiceTypeSpecifier">
                           <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                           <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <expression localId="948" locator="461:7-461:17" name="Medications" xsi:type="OperandRef">
                        <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                           <elementType xsi:type="ChoiceTypeSpecifier">
                              <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                              <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                           </elementType>
                        </resultTypeSpecifier>
                     </expression>
                  </source>
                  <where localId="952" locator="462:9-462:36" resultTypeName="t:Boolean" xsi:type="Is">
                     <operand localId="950" locator="462:15" name="M" xsi:type="AliasRef">
                        <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                           <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                           <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                     </operand>
                     <isTypeSpecifier localId="951" locator="462:20-462:36" resultTypeName="fhir:MedicationRequest" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                  </where>
                  <return localId="955" locator="463:9-463:41">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <expression localId="954" locator="463:16-463:41" name="MedicationRequestPeriod" xsi:type="FunctionRef">
                        <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </resultTypeSpecifier>
                        <operand asType="fhir:MedicationRequest" xsi:type="As">
                           <operand localId="953" locator="463:40" name="M" xsi:type="AliasRef">
                              <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                                 <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                                 <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                              </resultTypeSpecifier>
                           </operand>
                        </operand>
                     </expression>
                  </return>
               </operand>
               <operand localId="966" locator="465:13-471:7" name="RolloutIntervals" xsi:type="FunctionRef">
                  <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                     <elementType xsi:type="IntervalTypeSpecifier">
                        <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                     </elementType>
                  </resultTypeSpecifier>
                  <operand localId="965" locator="467:11-469:46" xsi:type="Query">
                     <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                        <elementType xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                        </elementType>
                     </resultTypeSpecifier>
                     <source localId="958" locator="467:11-467:23" alias="M">
                        <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                           <elementType xsi:type="ChoiceTypeSpecifier">
                              <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                              <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                           </elementType>
                        </resultTypeSpecifier>
                        <expression localId="957" locator="467:11-467:21" name="Medications" xsi:type="OperandRef">
                           <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                              <elementType xsi:type="ChoiceTypeSpecifier">
                                 <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                                 <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                              </elementType>
                           </resultTypeSpecifier>
                        </expression>
                     </source>
                     <where localId="961" locator="468:13-468:41" resultTypeName="t:Boolean" xsi:type="Is">
                        <operand localId="959" locator="468:19" name="M" xsi:type="AliasRef">
                           <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                              <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                              <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                        </operand>
                        <isTypeSpecifier localId="960" locator="468:24-468:41" resultTypeName="fhir:MedicationDispense" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                     </where>
                     <return localId="964" locator="469:13-469:46">
                        <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                           <elementType xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           </elementType>
                        </resultTypeSpecifier>
                        <expression localId="963" locator="469:20-469:46" name="MedicationDispensePeriod" xsi:type="FunctionRef">
                           <resultTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:Date" xsi:type="NamedTypeSpecifier"/>
                           </resultTypeSpecifier>
                           <operand asType="fhir:MedicationDispense" xsi:type="As">
                              <operand localId="962" locator="469:45" name="M" xsi:type="AliasRef">
                                 <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                                    <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                                    <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                                 </resultTypeSpecifier>
                              </operand>
                           </operand>
                        </expression>
                     </return>
                  </operand>
               </operand>
            </operand>
         </expression>
         <operand name="Medications">
            <operandTypeSpecifier localId="947" locator="457:15-459:4" xsi:type="ListTypeSpecifier">
               <resultTypeSpecifier xsi:type="ListTypeSpecifier">
                  <elementType xsi:type="ChoiceTypeSpecifier">
                     <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                     <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                  </elementType>
               </resultTypeSpecifier>
               <elementType localId="946" locator="457:20-459:3" xsi:type="ChoiceTypeSpecifier">
                  <resultTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                     <choice name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
                  </resultTypeSpecifier>
                  <choice localId="944" locator="457:27-457:45" resultTypeName="fhir:MedicationRequest" name="fhir:MedicationRequest" xsi:type="NamedTypeSpecifier"/>
                  <choice localId="945" locator="458:5-458:24" resultTypeName="fhir:MedicationDispense" name="fhir:MedicationDispense" xsi:type="NamedTypeSpecifier"/>
               </elementType>
            </operandTypeSpecifier>
         </operand>
      </def>
   </statements>
</library>